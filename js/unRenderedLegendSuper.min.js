/*! pedigree-editor-tool - v1.3.0-SNAPSHOT - 2017-05-19
* https://github.com/OxBRCInformatics/pedigree-editor-tool#readme
* Copyright (c) 2017  Licensed AGPL-3.0 */

var unRenderedLegendSuper=Class.create(Legend,{addNode:function(node){var id=Object.keys(this._affectedNodes).length;if(0==Object.keys(this._affectedNodes).length&&(this._legendBox.show(),!editor.getPreferencesManager().getConfigurationOption("hideDraggingHint")&&this._legendInfo&&this._legendInfo.show()),!this._hasAffectedNodes(id)){this._affectedNodes[id]=[id];var listElement=this._generateNode(id,node);this._list.insert(listElement)}this._updateCaseNumbersForObject(id)},addAllNodes:function(nodes){for(var i=0;nodes&&i<nodes.length;i++)this.addNode(nodes[i])},removeAllNodes:function(){for(var currentNodesLength=Object.keys(this._affectedNodes).length,i=0;i<currentNodesLength;i++)$(this._getPrefix()+i).remove();this._legendBox.hide(),0==this._legendBox.up().select(".abnormality").size()&&this._legendInfo&&this._legendInfo.hide(),this._affectedNodes={},this._objectColors={}},_generateNode:function(id,node){var color=this.getObjectColor(id),HTMLContent=node.participantId+"<br>",item=new Element("li",{class:"UnRendered-legend-box-item abnormality drop-"+this._getPrefix(),id:this._getPrefix()+id}).update(HTMLContent);node.unRenderedIndex=id,item.store("valueAll",node),item.insert(new Element("span",{class:"unRenderedItemName"}).update("NHS#: ")),item.insert(new Element("span",{class:"unRenderedItemValue"}).update(node.NHSNumber)),item.insert(new Element("span",{}).update("<br>")),node.chiNumber&&node.chiNumber.length>0&&(item.insert(new Element("span",{class:"unRenderedItemName"}).update("CHI#: ")),item.insert(new Element("span",{class:"unRenderedItemValue"}).update(node.chiNumber)),item.insert(new Element("span",{}).update("<br>"))),item.insert(new Element("span",{class:"unRenderedItemName"}).update("Forenames: ")),item.insert(new Element("span",{class:"unRenderedItemValue"}).update(node.firstName)),item.insert(new Element("span",{}).update("<br>")),item.insert(new Element("span",{class:"unRenderedItemName"}).update("Surname: ")),item.insert(new Element("span",{class:"unRenderedItemValue"}).update(node.lastName)),item.insert(new Element("span",{}).update("<br>")),item.insert(new Element("span",{class:"unRenderedItemName"}).update("Gender: "));var genderDisplayText=Helpers.getGenderDisplayText(node.sex);item.insert(new Element("span",{class:"unRenderedItemValue"}).update(genderDisplayText)),item.insert(new Element("span",{}).update("<br>")),item.insert(new Element("span",{class:"unRenderedItemName"}).update("BirthDate: "));dob="";if(node.birthDate)var dob=node.birthDate.day+"/"+node.birthDate.month+"/"+node.birthDate.year;if(item.insert(new Element("span",{class:"unRenderedItemValue"}).update(dob)),item.insert(new Element("span",{}).update("<br>")),item.insert(new Element("span",{class:"unRenderedItemName"}).update("Relation: ")),item.insert(new Element("span",{class:"unRenderedItemValue"}).update(node.relationshipToProband)),item.insert(new Element("span",{}).update("<br>")),item.insert(new Element("span",{class:"unRenderedItemName unRenderedHidden"}).update("KaryotypicSex: ")),item.insert(new Element("span",{class:"unRenderedItemValue unRenderedHidden"}).update(node.karyotypicSex)),item.insert(new Element("span",{class:"unRenderedHidden"}).update("<br>")),node.disordersFullDetails){item.insert(new Element("span",{class:"unRenderedItemName unRenderedHidden"}).update("Disorders:")),item.insert(new Element("span",{class:"unRenderedHidden"}).update("<br>"));for(i=0;i<node.disordersFullDetails.length;i++)item.insert(new Element("span",{class:"unRenderedHidden unRendered-disorder-item"}).update("&bull;&nbsp;"+node.disordersFullDetails[i].name)),item.insert(new Element("span",{class:"unRenderedHidden"}).update("<br>"))}if(node.hpoTermsFullDetails){item.insert(new Element("span",{class:"unRenderedItemName unRenderedHidden"}).update("HPO:")),item.insert(new Element("span",{class:"unRenderedHidden"}).update("<br>"));for(var i=0;i<node.hpoTermsFullDetails.length;i++)item.insert(new Element("span",{class:"unRenderedHidden unRendered-disorder-item"}).update("&bull;&nbsp;"+node.hpoTermsFullDetails[i].hpoID+"&nbsp;"+node.hpoTermsFullDetails[i].name)),item.insert(new Element("span",{class:"unRenderedHidden"}).update("<br>"))}var moreValuesDots=new Element("span",{class:"moreValueDots"}).update("...&nbsp;"),plusElement=new Element("span",{style:"cursor:pointer;font-size: 90%;"}).insert(moreValuesDots).insert('<i class="fa fa-plus-square-o" aria-hidden="true"></i>');item.insert(plusElement),item.select("span.unRenderedHidden").each(Element.hide),plusElement.observe("click",function(event){var plusIcon=this.select("i")[0];plusIcon.hasClassName("fa-plus-square-o")?(plusIcon.removeClassName("fa-plus-square-o"),plusIcon.addClassName("fa-minus-square-o"),item.select("span.unRenderedHidden").each(Element.show),moreValuesDots.hide()):(plusIcon.addClassName("fa-plus-square-o"),plusIcon.removeClassName("fa-minus-square-o"),item.select("span.unRenderedHidden").each(Element.hide),moreValuesDots.show())}),item.insert(new Element("input",{type:"hidden",value:id}));var bubble=new Element("span",{class:"UnRendered-abnormality-color"});bubble.style.backgroundColor=color,item.insert({top:bubble});var countLabelContainer=new Element("span",{class:"abnormality-cases-container"});return item.insert(" ").insert(countLabelContainer),new Draggable(item,{revert:!0,reverteffect:function(segment){segment.setStyle({height:"",left:"",position:"",top:"",zIndex:"",width:""})},ghosting:!0}),item}});