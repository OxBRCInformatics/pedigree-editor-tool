/*! pedigree-editor-tool - v1.3.1 - 2017-05-22
* https://github.com/OxBRCInformatics/pedigree-editor-tool#readme
* Copyright (c) 2017  Licensed AGPL-3.0 */

Ordering=function(order,vOrder){this.order=order,this.vOrder=vOrder},Ordering.prototype={serialize:function(){return this.order},deserialize:function(data){this.order=data,this.vOrder=[];for(var r=0;r<this.order.length;r++)for(var ordersAtRank=this.order[r],i=0;i<ordersAtRank.length;i++)this.vOrder[ordersAtRank[i]]=i},insert:function(rank,insertOrder,vertex){this.order[rank].splice(insertOrder,0,vertex),this.vOrder[vertex]=insertOrder;for(var next=insertOrder+1;next<this.order[rank].length;++next)this.vOrder[this.order[rank][next]]++},exchange:function(rank,index1,index2){var v1=this.order[rank][index1],v2=this.order[rank][index2];this.order[rank][index2]=v1,this.order[rank][index1]=v2,this.vOrder[v1]=index2,this.vOrder[v2]=index1},canMove:function(rank,index,amount){var newIndex=index+amount;return!(newIndex<0)&&!(newIndex>this.order[rank].length-1)},move:function(rank,index,amount){if(0==amount)return!0;var newIndex=index+amount;if(newIndex<0)return!1;var ord=this.order[rank];if(newIndex>ord.length-1)return!1;var v=ord[index];if(newIndex>index)for(i=index;i<newIndex;++i){vv=ord[i+1];ord[i]=vv,this.vOrder[vv]=i}else for(var i=index;i>newIndex;--i){var vv=ord[i-1];ord[i]=vv,this.vOrder[vv]=i}return ord[newIndex]=v,this.vOrder[v]=newIndex,!0},copy:function(){return new Ordering(Helpers.clone2DArray(this.order),this.vOrder.slice())},moveVertexToRankAndOrder:function(oldRank,oldOrder,newRank,newOrder){var v=this.order[oldRank][oldOrder];this.order[oldRank].splice(oldOrder,1),this.order[newRank].splice(newOrder,0,v),this.vOrder[v]=newOrder;for(i=newOrder+1;i<this.order[newRank].length;++i){nextV=this.order[newRank][i];this.vOrder[nextV]++}for(var i=oldOrder;i<this.order[oldRank].length;++i){var nextV=this.order[oldRank][i];this.vOrder[nextV]--}},moveVertexToOrder:function(rank,oldOrder,newOrder){var shiftAmount=newOrder<=oldOrder?newOrder-oldOrder:newOrder-oldOrder-1;this.move(rank,oldOrder,shiftAmount)},removeUnplugged:function(){for(var result=this.order[0].slice(0),u=0;u<this.order[0].length;++u){for(var unplugged=this.order[0][u],i=0;i<this.order.length;++i)for(var j=0;j<this.order[i].length;++j)this.order[i][j]>unplugged&&this.order[i][j]--;this.vOrder.splice(unplugged,1)}return this.order[0]=[],result},remove:function(v,rank){var order=this.vOrder[v];this.moveVertexToRankAndOrder(rank,order,0,0),this.removeUnplugged()},insertAndShiftAllIdsAboveVByOne:function(v,rank,newOrder){for(i=this.vOrder.length;i>v;--i)this.vOrder[i]=this.vOrder[i-1];for(var i=0;i<this.order.length;++i)for(var j=0;j<this.order[i].length;++j)this.order[i][j]>=v&&this.order[i][j]++;this.insert(rank,newOrder,v)},insertRank:function(insertBeforeRank){this.order.splice(insertBeforeRank,0,[])},getRightNeighbour:function(v,rank){var order=this.vOrder[v];return order<this.order[rank].length-1?this.order[rank][order+1]:null},getLeftNeighbour:function(v,rank){var order=this.vOrder[v];return order>0?this.order[rank][order-1]:null},sortByOrder:function(v_list){var vorders=this.vOrder,result=v_list.slice(0);return result.sort(function(x,y){return vorders[x]-vorders[y]}),result},getLeftToRightTopToBottomOrdering:function(onlyType,GG){for(var result=[],i=1;i<this.order.length;++i)for(var j=0;j<this.order[i].length;++j){var v=this.order[i][j];onlyType&&GG.type[v]!=onlyType||result.push(this.order[i][j])}return result}};