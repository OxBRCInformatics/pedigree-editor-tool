/*! pedigree-editor-tool - v1.3.1 - 2017-05-22
* https://github.com/OxBRCInformatics/pedigree-editor-tool#readme
* Copyright (c) 2017  Licensed AGPL-3.0 */

var DisorderLegend=Class.create(Legend,{initialize:function($super){$super("Disorders",!0),this._disorderCache={}},_getPrefix:function(id){return"disorder"},getDisorder:function(disorderID){if(!this._disorderCache.hasOwnProperty(disorderID)){var whenNameIsLoaded=function(){this._updateDisorderName(disorderID)};this._disorderCache[disorderID]=new Disorder(disorderID,null,null,null,null,whenNameIsLoaded.bind(this))}return this._disorderCache[disorderID]},getAllNames:function(){var result={};for(var disorderID in this._affectedNodes)this._affectedNodes.hasOwnProperty(disorderID)&&(result[disorderID]=this.getDisorder(disorderID).getName());return result},addCase:function($super,disorderID,disorderName,valueAll,nodeID){var valueAll_WithoutAgeOfOnset=Object.clone(valueAll);valueAll_WithoutAgeOfOnset.ageOfOnset="",this._disorderCache.hasOwnProperty(disorderID)||(this._disorderCache[disorderID]=new Disorder(disorderID,disorderName,"",valueAll_WithoutAgeOfOnset.disorderType,valueAll_WithoutAgeOfOnset)),$super(disorderID,disorderName,valueAll_WithoutAgeOfOnset,nodeID)},_updateDisorderName:function(disorderID){this._legendBox.down("li#"+this._getPrefix()+"-"+disorderID+" .disorder-name").update(this.getDisorder(disorderID).getName())},_generateElement:function($super,disorderID,name,valueAll){if(!this._objectColors.hasOwnProperty(disorderID)){var color=this._generateColor(disorderID,valueAll);void 0!=valueAll?"GEL"!=valueAll.disorderType&&(color="#FFF"):color="#FFF",this._objectColors[disorderID]=color,document.fire("disorder:color",{id:disorderID,color:color})}var item=$super(disorderID,name,valueAll),disorderType="";if(disorderType=void 0!=valueAll?valueAll.disorderType:"OMIM","affected"!=name){var disorderTypeContainer=new Element("span",{class:"disorder-disorder-type"}).insert("(").insert(disorderType).insert(")");item.down(".disorder-name").insert(" ").insert(disorderTypeContainer)}return item},_onDropObject:function(node,disorderID){var currentDisorders=node.getDisorders().slice(0);if(-1==currentDisorders.indexOf(disorderID)){currentDisorders.push(disorderID),editor.getView().unmarkAll();var properties={setDisorders:currentDisorders},event={nodeID:node.getID(),properties:properties};document.fire("pedigree:node:setproperty",event)}else this._onFailedDrag(node,"This person already has the selected disorder","Can't drag this disorder to this person")},_generateColor:function(disorderID){if(this._objectColors.hasOwnProperty(disorderID))return this._objectColors[disorderID];var usedColors=Object.values(this._objectColors),prefColors=["#D1E9E9","#92c0db","#4575B4","#949ab8","#FEE090","#bf6632","#fca860","#9a4500","#d12943","#00a2bf"];if("affected"==disorderID&&(prefColors=["#FEE090","#dbad71"]),null!==this.getPreferedColor(disorderID)&&prefColors.unshift(this.getPreferedColor(disorderID)),usedColors.each(function(color){prefColors=prefColors.without(color)}),prefColors.length>0)return prefColors[0];for(var randomColor=Raphael.getColor();"#ffffff"==randomColor||-1!=usedColors.indexOf(randomColor);)randomColor="#"+((1<<24)*Math.random()|0).toString(16);return randomColor}});