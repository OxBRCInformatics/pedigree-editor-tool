/*! pedigree-editor-tool - v1.3.1 - 2017-05-22
* https://github.com/OxBRCInformatics/pedigree-editor-tool#readme
* Copyright (c) 2017  Licensed AGPL-3.0 */

NodeMenu=Class.create({initialize:function(data,tabs,otherCSSClass){this._justOpened=!1,this.canvas=editor.getWorkspace().canvas||$("body");var cssClass="menu-box";if(otherCSSClass&&(cssClass+=" "+otherCSSClass),this.menuBox=new Element("div",{class:cssClass}),this.closeButton=new Element("span",{class:"close-button"}).update(" "),this.menuBox.insert({top:this.closeButton}),this.closeButton.observe("click",this.hide.bindAsEventListener(this)),this.form=new Element("form",{method:"get",action:"",class:"tabs-content"}),this.tabs={},this.tabHeaders={},tabs&&tabs.length>0){this.tabTop=new Element("dl",{class:"tabs"});for(var i=0;i<tabs.length;i++){var tabName=tabs[i],activeClass=0==i?"active":"";this.tabs[tabName]=new Element("div",{id:"tab_"+tabName,class:"content "+activeClass}),this.form.insert(this.tabs[tabName]),this.tabHeaders[tabName]=new Element("dd",{class:activeClass}).insert("<a>"+tabName+"</a>");_this=this;this.tabHeaders[tabName].observe("click",function(tabName){return function(){for(var tab in _this.tabs)_this.tabs.hasOwnProperty(tab)&&(tab!=tabName?(_this.tabs[tab].className="content",_this.tabHeaders[tab].className=""):(_this.tabs[tab].className="content active",_this.tabHeaders[tab].className="active"));_this.reposition()}}(tabName)),this.tabTop.insert(this.tabHeaders[tabName])}var div=new Element("div",{class:"tabholder"}).insert(this.tabTop).insert(this.form);this.menuBox.insert({bottom:div})}else this.singleTab=new Element("div",{class:"tabholder"}).insert(this.form),this.menuBox.insert({bottom:this.singleTab}),this.closeButton.addClassName("close-button-old"),this.form.addClassName("content");this.fieldMap={};var _this=this;data.each(function(d){if("function"==typeof _this._generateField[d.type]){var insertLocation=_this.form;d.tab&&_this.tabs.hasOwnProperty(d.tab)&&(insertLocation=_this.tabs[d.tab]),insertLocation.insert(_this._generateField[d.type].call(_this,d))}}),this.hide(),editor.getWorkspace().getWorkArea().insert(this.menuBox),this._onClickOutside=this._onClickOutside.bindAsEventListener(this),this._generatePickersAndSuggests(),this._updateDisorderColor=function(id,color){this.menuBox.select('.field-disorders li input[value="'+id+'"]').each(function(item){var colorBubble=item.up("li").down(".abnormality-color");colorBubble||(colorBubble=new Element("span",{class:"abnormality-color"}),item.up("li").insert({top:colorBubble})),colorBubble.setStyle({background:color})})}.bind(this),document.observe("disorder:color",function(event){event.memo&&event.memo.id&&event.memo.color&&_this._updateDisorderColor(event.memo.id,event.memo.color)}),this._updateGeneColor=function(id,color){this.menuBox.select('.field-candidate_genes li input[value="'+id+'"]').each(function(item){var colorBubble=item.up("li").down(".abnormality-color");colorBubble||(colorBubble=new Element("span",{class:"abnormality-color"}),item.up("li").insert({top:colorBubble})),colorBubble.setStyle({background:color})})}.bind(this),document.observe("gene:color",function(event){event.memo&&event.memo.id&&event.memo.color&&_this._updateGeneColor(event.memo.id,event.memo.color)})},_generatePickersAndSuggests:function(){this.form.select(".fuzzy-date").each(function(item){if(!item.__datePicker){var inputMode=editor.getPreferencesManager().getConfigurationOption("dateEditFormat");item.__datePicker=new PedigreeFuzzyDatePicker(item,inputMode)}});var FORM=this.form;this.form.select("input.suggest-omim").each(function(item){item.hasClassName("initialized")||(item._suggest=new PhenoTips.widgets.Suggest(item,{scriptFunction:function(){if(FORM.select("select[name='disorderType']").length>0){var select=FORM.select("select[name='disorderType']")[0],disorderType=select.options[select.selectedIndex].value;return Disorder.getServiceURL(disorderType)+"&"}return Disorder.getServiceURL("OMIM")+"&"},resultUsePagination:function(){var select=FORM.select("select[name='disorderType']")[0];return"SnomedCT"==select.options[select.selectedIndex].value},script:Disorder.getServiceURL("OMIM")+"&",varname:"q",minchars:3,noresults:"No matching terms",json:!0,resultsParameter:function(){var select=FORM.select("select[name='disorderType']")[0];return"GEL"==select.options[select.selectedIndex].value?"resultFlat":"rows"},resultId:function(){var select=FORM.select("select[name='disorderType']")[0];return"GEL"==select.options[select.selectedIndex].value?"disorderIdWithTag":"id"},resultValue:function(){var select=FORM.select("select[name='disorderType']")[0];return"GEL"==select.options[select.selectedIndex].value?"disorderName":"fullDetail"},resultInfo:{},displaySuggestItemFunction:function(searchTerm,data,pedigreeWidget){if(!data.valueAll)return null;var select=FORM.select("select[name='disorderType']")[0];if("GEL"==select.options[select.selectedIndex].value){var newDataValue=pedigreeWidget.highLightSearchResult(data.value.escapeHTML(),searchTerm),suggestedValue=new Element("span",{class:"suggestValue"}).update(newDataValue),diseaseGroup=new Element("span").update("<br><br> Group: <span style='font-size: 11px'>"+pedigreeWidget.highLightSearchResult(data.valueAll.groupName,searchTerm)+"</span>"),diseaseSubGroup=new Element("span").update("<br> SubGroup: <span style='font-size: 11px'>"+pedigreeWidget.highLightSearchResult(data.valueAll.subGroupName,searchTerm)+"</span>");return suggestedValue.insert(diseaseGroup),suggestedValue.insert(diseaseSubGroup),suggestedValue}return null},canSelectInputTerm:function(){return!1},enableHierarchy:!1,fadeOnClear:!1,timeout:3e4,parentContainer:$("body")}),item.hasClassName("multi")&&void 0!==PhenoTips.widgets.SuggestPicker&&(item._suggestPicker=new PhenoTips.widgets.SuggestPicker(item,item._suggest,{showKey:!1,showTooltip:!1,showDeleteTool:!0,enableSort:!1,showClearTool:!0,inputType:"hidden",listInsertionElt:"input",listInsertionPosition:"after",acceptFreeText:!0,name:"disorder",showDisorderType:!0,customizeItemDisplay:function(key,value,valueAll,displayedValue,options){if(options.showDisorderType){var disorderType="";if(disorderType=void 0!=valueAll?valueAll.disorderType:"OMIM","affected"!=value){var disorderTypeContainer=new Element("span",{class:"disorder-disorder-type"}).insert("(").insert(disorderType).insert(")");if(displayedValue.insert("").insert(disorderTypeContainer),void 0!=valueAll&&void 0!=valueAll.ageOfOnset&&valueAll.ageOfOnset.length>0){var ageOfOnset=valueAll.ageOfOnset,ageOfOnsetContainer=new Element("span","").insert(", ").insert(new Element("span",{class:"disorder-age-of-onset"}).insert(ageOfOnset).insert(""));displayedValue.insert("").insert(ageOfOnsetContainer)}}}},acceptsDuplicate:function(){var select=FORM.select("select[name='disorderType']")[0],disorderType=select.options[select.selectedIndex].value;return"ICD10"==disorderType||"SnomedCT"==disorderType}})),item.addClassName("initialized"),document.observe("ms:suggest:containerCreated",function(event){event.memo&&event.memo.suggest===item._suggest&&item._suggest.container.setStyle({overflow:"auto",maxHeight:document.viewport.getHeight()-item._suggest.container.cumulativeOffset().top+"px"})}))}),this.form.select("input.suggest-ethnicity").each(function(item){if(!item.hasClassName("initialized")){new XWiki.Document("EthnicitySearch","PhenoTips").getURL("get","outputSyntax=plain");item._suggest=new PhenoTips.widgets.Suggest(item,{script:"/OCService/lookupServices/Ethnicity?",varname:"input",noresults:"No matching terms",resultsParameter:"rows",json:!0,resultId:"id",resultValue:"ethnicity",resultInfo:{},enableHierarchy:!1,fadeOnClear:!1,timeout:3e4,parentContainer:$("body")}),item.hasClassName("multi")&&void 0!==PhenoTips.widgets.SuggestPicker&&(item._suggestPicker=new PhenoTips.widgets.SuggestPicker(item,item._suggest,{showKey:!1,showTooltip:!1,showDeleteTool:!0,enableSort:!1,showClearTool:!0,inputType:"hidden",listInsertionElt:"input",listInsertionPosition:"after",acceptFreeText:!0})),item.addClassName("initialized"),document.observe("ms:suggest:containerCreated",function(event){event.memo&&event.memo.suggest===item._suggest&&item._suggest.container.setStyle({overflow:"auto",maxHeight:document.viewport.getHeight()-item._suggest.container.cumulativeOffset().top+"px"})})}}),this.form.select("input.suggest-genes").each(function(item){if(!item.hasClassName("initialized")){var geneServiceURL=new XWiki.Document("GeneNameService","PhenoTips").getURL("get","outputSyntax=plain");item._suggest=new PhenoTips.widgets.Suggest(item,{script:geneServiceURL+"&json=true&",varname:"q",noresults:"No matching terms",resultsParameter:"docs",json:!0,resultId:"symbol",resultValue:"symbol",resultInfo:{},enableHierarchy:!1,tooltip:"gene-info",fadeOnClear:!1,timeout:3e4,parentContainer:$("body")}),item.hasClassName("multi")&&void 0!==PhenoTips.widgets.SuggestPicker&&(item._suggestPicker=new PhenoTips.widgets.SuggestPicker(item,item._suggest,{showKey:!1,showTooltip:!1,showDeleteTool:!0,enableSort:!1,showClearTool:!0,inputType:"hidden",listInsertionElt:"input",listInsertionPosition:"after",acceptFreeText:!0})),item.addClassName("initialized"),document.observe("ms:suggest:containerCreated",function(event){event.memo&&event.memo.suggest===item._suggest&&item._suggest.container.setStyle({overflow:"auto",maxHeight:document.viewport.getHeight()-item._suggest.container.cumulativeOffset().top+"px"})})}});var webService=new WebService;this.form.select("input.suggest-hpo").each(function(item){item.hasClassName("initialized")||(item._suggest=new PhenoTips.widgets.Suggest(item,{script:webService.getHPOLookupPath()+"&",varname:"term",noresults:"No matching terms",json:!0,resultsParameter:function(){return"rows"},resultId:function(){return"id"},resultValue:function(){return"fullDetail"},resultAltName:"synonym",resultCategory:"term_category",resultInfo:{},enableHierarchy:!1,resultParent:"is_a",fadeOnClear:!1,timeout:3e4,minchars:3,parentContainer:$("body"),canSelectInputTerm:function(){return!1}}),item.hasClassName("multi")&&void 0!==PhenoTips.widgets.SuggestPicker&&(item._suggestPicker=new PhenoTips.widgets.SuggestPicker(item,item._suggest,{showKey:!1,showTooltip:!1,showDeleteTool:!0,enableSort:!1,showClearTool:!0,inputType:"hidden",listInsertionElt:"input",listInsertionPosition:"after",acceptFreeText:!0,name:"hpo",showHPOPresentStatus:!0,customizeItemDisplay:function(key,value,valueAll,displayedValue,options){if(options.showHPOPresentStatus){var hpoPresent="";hpoPresent=void 0!=valueAll&&valueAll.hpoPresent?valueAll.hpoPresent:"unknown";var hpoPresentContainer=new Element("span",{class:"hpo-present"}).insert("(").insert(hpoPresent).insert(")");displayedValue.insert("").insert(hpoPresentContainer)}},acceptsDuplicate:function(){return!1}})),item.addClassName("initialized"),document.observe("ms:suggest:containerCreated",function(event){event.memo&&event.memo.suggest===item._suggest&&item._suggest.container.setStyle({overflow:"auto",maxHeight:document.viewport.getHeight()-item._suggest.container.cumulativeOffset().top+"px"})}))}),this.form.select("input.suggest-patients").each(function(item){if(!item.hasClassName("initialized")){var patientSuggestURL=new XWiki.Document("SuggestPatientsService","PhenoTips").getURL("get","outputSyntax=plain")+"&permission=edit&";console.log("PatientSuggest URL: "+patientSuggestURL),item._suggest=new PhenoTips.widgets.Suggest(item,{script:patientSuggestURL,varname:"input",noresults:"No matching patients",json:!1,resultsParameter:"rs",resultId:"id",resultValue:"name",resultInfo:"info",enableHierarchy:!1,fadeOnClear:!1,timeout:3e4,parentContainer:$("body")}),item.addClassName("initialized"),document.observe("ms:suggest:containerCreated",function(event){event.memo&&event.memo.suggest===item._suggest&&item._suggest.container.setStyle({overflow:"auto",maxHeight:document.viewport.getHeight()-item._suggest.container.cumulativeOffset().top+"px"})})}})},_generateEmptyField:function(data){var cssClass="field-box field-"+data.name;data.class&&(cssClass="field-box field-"+data.name+" "+data.class);var result=new Element("div",{class:cssClass}),fieldNameClass="field-name";if("label"==data.type&&(fieldNameClass="field-label"),"radio"==data.type&&(fieldNameClass+=" field-no-user-select"),data.addCSS&&"object"==typeof data.addCSS)for(var styleName in data.addCSS)result.style[styleName]=data.addCSS[styleName];var label=new Element("label",{class:fieldNameClass}).update(data.label);return result.inputsContainer=new Element("div",{class:"field-inputs"}),"label"!=data.type?result.insert(label).insert(result.inputsContainer):result.insert(label),this.fieldMap[data.name]={type:data.type,element:result,default:data.default||"",crtValue:data.default||"",function:data.function,disabled:data.disabled||!1,isMultipleSelect:data.isMultipleSelect||!1,inactive:!1},result},_attachFieldEventListeners:function(field,eventNames,values){var _this=this;eventNames.each(function(eventName){field.observe(eventName,function(event){if(_this._saveCursorPositionIfNecessary(field),!_this._updating){var target=_this.targetNode;if(target){void 0==_this.fieldMap[field.name].isMultipleSelect||0==_this.fieldMap[field.name].isMultipleSelect?_this.fieldMap[field.name].crtValue=field._getValue&&field._getValue()[0]:_this.fieldMap[field.name].crtValue=field._getValue&&field._getValue();var method=_this.fieldMap[field.name].function;if(target.getSummary()[field.name].value!=_this.fieldMap[field.name].crtValue){if(0==method.indexOf("set")&&"function"==typeof target[method]){(properties={})[method]=_this.fieldMap[field.name].crtValue;event={nodeID:target.getID(),properties:properties};document.fire("pedigree:node:setproperty",event)}else{var properties={};properties[method]=_this.fieldMap[field.name].crtValue;var event={nodeID:target.getID(),modifications:properties};document.fire("pedigree:node:modify",event)}field.fire("pedigree:change")}}}})})},_saveCursorPositionIfNecessary:function(field){this.__lastSelectedField=field.name,this.__lastNodeID=this.targetNode,("text"==field.type||document.selection&&"textarea"==field.type)&&(this.__lastCursorPosition=GraphicHelpers.getCaretPosition(field))},_restoreCursorPositionIfNecessary:function(field){this.targetNode==this.__lastNodeID&&void 0!=field&&field.name==this.__lastSelectedField&&("text"==field.type||document.selection&&"textarea"==field.type)&&GraphicHelpers.setCaretPosition(field,this.__lastCursorPosition)},update:function(newTarget){newTarget&&(this.targetNode=newTarget),this.targetNode&&(this._updating=!0,this._setCrtData(this.targetNode.getSummary()),this.reposition(),delete this._updating)},_attachDependencyBehavior:function(field,data){if(data.dependency){var dependency=data.dependency.split(" ",3),element=this.fieldMap[dependency[0]].element;dependency[0]=this.form[dependency[0]],void 0!=data.dependencyShowInline&&1==data.dependencyShowInline&&element.inputsContainer.insert(field.up()),this.fieldMap[field.name].element=element,this._updatedDependency(field,dependency),dependency[0].observe("pedigree:change",function(){this._updatedDependency(field,dependency),field.value=""}.bindAsEventListener(this))}},_updatedDependency:function(field,dependency){switch(dependency[1]){case"!=":field.disabled=dependency[0].value==dependency[2];break;default:field.disabled=dependency[0].value!=dependency[2]}},_generateField:{radio:function(data){var result=this._generateEmptyField(data),columnClass=data.columns?"field-values-"+data.columns+"-columns":"field-values";columnClass+=" field-no-user-select";var values=new Element("div",{class:columnClass});result.inputsContainer.insert(values);var _this=this,_generateRadioButton=function(v){var radioLabel=new Element("label",{class:data.name+"_"+v.actual}).update(v.displayed);v.hasOwnProperty("columnshiftPX")&&radioLabel.setStyle({marginLeft:v.columnshiftPX+"px"});var radioButton=new Element("input",{type:"radio",name:data.name,value:v.actual});radioLabel.insert({top:radioButton}),radioButton._getValue=function(){return[this.value]}.bind(radioButton),values.insert(radioLabel),_this._attachFieldEventListeners(radioButton,["click"]),_this._attachDependencyBehavior(radioButton,data)};return data.hasOwnProperty("valuesIE9")&&navigator&&-1!=navigator.appVersion.indexOf("MSIE 9")?data.valuesIE9.each(_generateRadioButton):data.values.each(_generateRadioButton),result},checkbox:function(data){var result=this._generateEmptyField(data),checkbox=new Element("input",{type:"checkbox",name:data.name,value:"1"});return result.down("label").insert({top:checkbox}),checkbox._getValue=function(){return[this.checked]}.bind(checkbox),this._attachFieldEventListeners(checkbox,["click"]),result},label:function(data){var result=this._generateEmptyField(data);return result.addClassName("field-label"),result},text:function(data){var result=this._generateEmptyField(data),text=new Element("input",{type:"text",name:data.name});return data.tip&&(text.placeholder=data.tip),result.inputsContainer.insert(text),text.wrap("span"),text._getValue=function(){return[this.value]}.bind(text),this._attachFieldEventListeners(text,["keyup"],[!0]),this._attachDependencyBehavior(text,data),result},textarea:function(data){var result=this._generateEmptyField(data),properties={name:data.name};properties.class="textarea-"+data.rows+"-rows";var text=new Element("textarea",properties);return result.inputsContainer.insert(text),text._getValue=function(){return[this.value]}.bind(text),this._attachFieldEventListeners(text,["keyup"],[!0]),this._attachDependencyBehavior(text,data),result},"date-picker":function(data){var result=this._generateEmptyField(data),datePicker=new Element("input",{type:"text",class:"fuzzy-date",name:data.name,title:data.format||"",alt:""});return result.inputsContainer.insert(datePicker),datePicker._getValue=function(){return[new PedigreeDate(JSON.parse(this.value))]}.bind(datePicker),this._attachFieldEventListeners(datePicker,["xwiki:date:changed"]),result},"disease-picker":function(data){var result=this._generateEmptyField(data),style=data.style?data.style:"",diseasePicker=new Element("input",{type:"text",class:"suggest multi suggest-omim",name:data.name,style:style});result.insert(diseasePicker),diseasePicker._getValue=function(){var results=[],container=this.up(".field-box");return container&&container.select("input[type=hidden][name="+data.name+"]").each(function(item){var valueAll,li=item.up("li");void 0!=li&&(valueAll=li.retrieve("valueAll")),results.push(new Disorder(item.value,item.next(".value")&&item.next(".value").firstChild.nodeValue||item.value,valueAll.ageOfOnset,valueAll.disorderType,valueAll))}),[results]}.bind(diseasePicker);var _this=this;return document.observe("custom:selection:changed",function(event){if(event.memo&&event.memo.fieldName==data.name&&event.memo.trigger&&event.findElement()!=event.memo.trigger&&!event.memo.trigger._silent){if(_this.form.select("input[name='ageOfOnset']").length>0){var ageOfOnset=_this.form.select("input[name='ageOfOnset']")[0].getValue(),valueAll=event.memo.customElement.retrieve("valueAll");void 0!=valueAll&&(valueAll.ageOfOnset=ageOfOnset)}Event.fire(event.memo.trigger,"custom:selection:changed"),_this.reposition()}}),this._attachFieldEventListeners(diseasePicker,["custom:selection:changed"]),result},"ethnicity-picker":function(data){var result=this._generateEmptyField(data),ethnicityPicker=new Element("input",{type:"text",class:"suggest multi suggest-ethnicity",name:data.name});result.insert(ethnicityPicker),ethnicityPicker._getValue=function(){var results=[],container=this.up(".field-box");return container&&container.select("input[type=hidden][name="+data.name+"]").each(function(item){results.push(item.next(".value")&&item.next(".value").firstChild.nodeValue||item.value)}),[results]}.bind(ethnicityPicker);var _this=this;return document.observe("custom:selection:changed",function(event){event.memo&&event.memo.fieldName==data.name&&event.memo.trigger&&event.findElement()!=event.memo.trigger&&!event.memo.trigger._silent&&(Event.fire(event.memo.trigger,"custom:selection:changed"),_this.reposition())}),this._attachFieldEventListeners(ethnicityPicker,["custom:selection:changed"]),result},"hpo-picker":function(data){var result=this._generateEmptyField(data),hpoPicker=new Element("input",{type:"text",class:"suggest multi suggest-hpo",name:data.name});result.insert(hpoPicker),hpoPicker._getValue=function(){var results=[],container=this.up(".field-box");return container&&container.select("input[type=hidden][name="+data.name+"]").each(function(item){var valueAll,li=item.up("li");void 0!=li&&(valueAll=li.retrieve("valueAll")),results.push(new HPOTerm(item.value,item.next(".value")&&item.next(".value").firstChild.nodeValue||item.value,valueAll.hpoPresent,valueAll))}),[results]}.bind(hpoPicker);var _this=this;return document.observe("custom:selection:changed",function(event){if(event.memo&&event.memo.fieldName==data.name&&event.memo.trigger&&event.findElement()!=event.memo.trigger&&!event.memo.trigger._silent){if(_this.form.select("select[name='hpoPresent']").length>0){var hpoPresent=_this.form.select("select[name='hpoPresent']")[0].getValue(),valueAll=event.memo.customElement.retrieve("valueAll");void 0!=valueAll&&(valueAll.hpoPresent=hpoPresent)}Event.fire(event.memo.trigger,"custom:selection:changed"),_this.reposition()}}),this._attachFieldEventListeners(hpoPicker,["custom:selection:changed"]),result},"phenotipsid-picker":function(data){var result=this._generateEmptyField(data),patientPicker=new Element("input",{type:"text",class:"suggest multi suggest-patients",name:data.name});result.insert(patientPicker),patientPicker._getValue=function(){var results=[],container=this.up(".field-box");return container&&container.select("input[type=hidden][name="+data.name+"]").each(function(item){results.push(item.next(".value")&&item.next(".value").firstChild.nodeValue||item.value)}),[results]}.bind(patientPicker);var _this=this;return document.observe("custom:selection:changed",function(event){event.memo&&event.memo.fieldName==data.name&&event.memo.trigger&&event.findElement()!=event.memo.trigger&&!event.memo.trigger._silent&&(Event.fire(event.memo.trigger,"custom:selection:changed"),_this.reposition())}),this._attachFieldEventListeners(patientPicker,["custom:selection:changed"]),result},"gene-picker":function(data){var result=this._generateEmptyField(data),genePicker=new Element("input",{type:"text",class:"suggest multi suggest-genes",name:data.name});result.insert(genePicker),genePicker._getValue=function(){var results=[],container=this.up(".field-box");return container&&container.select("input[type=hidden][name="+data.name+"]").each(function(item){results.push(item.next(".value")&&item.next(".value").firstChild.nodeValue||item.value)}),[results]}.bind(genePicker);var _this=this;return document.observe("custom:selection:changed",function(event){event.memo&&event.memo.fieldName==data.name&&event.memo.trigger&&event.findElement()!=event.memo.trigger&&!event.memo.trigger._silent&&(Event.fire(event.memo.trigger,"custom:selection:changed"),_this.reposition())}),this._attachFieldEventListeners(genePicker,["custom:selection:changed"]),result},select:function(data){var result=this._generateEmptyField(data),span=new Element("span"),style=data.style?data.style:"",isMultipleSelect=data.isMultipleSelect?data.isMultipleSelect:"",multiple="";void 0!=isMultipleSelect&&1==isMultipleSelect&&(multiple="multiple");var optionHTML='<select name="'+data.name+'" style="'+style+'" '+multiple+">",_generateSelectOption=function(v){optionHTML+='<option value="'+v.actual+'">'+v.displayed+"</option>"};return data.nullValue&&_generateSelectOption({actual:"",displayed:"-"}),data.values?data.values.each(_generateSelectOption):data.range&&$A($R(data.range.start,data.range.end)).each(function(i){_generateSelectOption({actual:i,displayed:i+" "+data.range.item[+(1!=i)]})}),optionHTML+="</select>",span.innerHTML=optionHTML,select=span.firstChild,result.inputsContainer.insert(span),select._getValue=function(){if(void 0==isMultipleSelect||0==isMultipleSelect)return[this.selectedIndex>=0&&this.options[this.selectedIndex].value||""];for(var selected=[],i=0;i<this.selectedOptions.length;i++)selected.push(this.selectedOptions[i].value);return selected}.bind(select),this._attachFieldEventListeners(select,["change"]),result},cancerlist:function(data){var result=this._generateEmptyField(data),cancerList=editor.getCancerLegend()._getAllSupportedCancers(),tableHeaderRow=new Element("tr",{class:"cancer_field cancer-header field-no-user-select"}),label1=new Element("td").insert(new Element("label",{class:"cancer_label_field"}).update("Name")),label2=new Element("td").insert(new Element("label",{class:"cancer_status_select"}).update("Status")),label3=new Element("td").insert(new Element("label",{class:"cancer_age_select"}).update("As of"));tableHeaderRow.insert(label1).insert(label2).insert(label3);var table=new Element("table");table.insert(tableHeaderRow);var spanAgeProto=new Element("span"),optionsHTML='<select name="'+data.name+'" class="cancer_age_select field-no-user-select"><option value=""></option>';optionsHTML+='<option value="before_1">before 1</option>';for(var age=1;age<=100;age++)age%10==0&&(optionsHTML+='<option value="before_'+age+'">'+(age-10+1)+"-"+age+"</option>"),optionsHTML+='<option value="'+age+'">'+age+"</option>";optionsHTML+='<option value="after_100">after 100</option></select>',spanAgeProto.innerHTML=optionsHTML;var spanSelectProto=new Element("span");spanSelectProto.innerHTML="<select name='"+data.name+"' class='cancer_status_select field-no-user-select'><option value=''></option><option value='affected'>Affected</option><option value='unaffected'>Unaffected</option></select>";for(var cancersUIElements=[],i=0;i<cancerList.length;i++){var cancerName=cancerList[i],tableRow=new Element("tr",{class:"cancer_field"}),label=new Element("td").insert(new Element("label",{class:"cancer_label_field"}).update(cancerName)),spanAge=spanAgeProto.cloneNode(!0),selectAge=spanAge.firstChild;selectAge.disable(),selectAge.id="cancer_age_"+cancerName;var spanSelect=spanSelectProto.cloneNode(!0),select=spanSelect.firstChild;select.id="cancer_status_"+cancerName;var textInput=new Element("textArea",{type:"text",name:data.name}).hide();textInput.disabled=!0,textInput.id="cancer_notes_"+cancerName;var expandNotes=new Element("label",{class:"clickable cancer-notes",for:textInput.id}).update("<span class='fa fa-file-text-o'></span>"),toggleNotes=function(textInput,expandNotes){return function(){1==textInput.disabled?(textInput.disabled=!1,textInput.show(),expandNotes.hide()):""==textInput.value&&(textInput.hide(),textInput.disabled=!0,expandNotes.show())}}(textInput,expandNotes),enableNotes=function(expandNotes,textInput,toggleNotes){return function(){expandNotes.observe("click",toggleNotes),textInput.observe("blur",toggleNotes),expandNotes.removeClassName("disabled")}}(expandNotes,textInput,toggleNotes),disableNotes=function(expandNotes,textInput,toggleNotes){return function(){expandNotes.stopObserving("click",toggleNotes),textInput.stopObserving("blur",toggleNotes),textInput.value="",textInput.hide(),textInput.disabled=!0,expandNotes.show(),expandNotes.addClassName("disabled")}}(expandNotes,textInput,toggleNotes);expandNotes.enableNotes=enableNotes,expandNotes.disableNotes=disableNotes,cancersUIElements.push({name:cancerName,status:select,age:selectAge,notes:textInput,enableNotes:enableNotes}),select._getValue=function(){for(var data={},i=0;i<cancersUIElements.length;i++){var nextCancer=cancersUIElements[i],statusTxt=nextCancer.status.selectedIndex>=0?nextCancer.status.options[nextCancer.status.selectedIndex].value:"",ageTxt=nextCancer.age.selectedIndex>=0?nextCancer.age.options[nextCancer.age.selectedIndex].value:"",notesTxt=nextCancer.notes.value;if(statusTxt&&""!=statusTxt){var status="affected"==statusTxt,ageNumeric=0;if(Helpers.isInt(ageTxt))ageNumeric=parseInt(ageTxt);else{var before=ageTxt.match(/before_(\d+)/);before&&(ageNumeric=before[1]-5)<0&&(ageNumeric=0);var after=ageTxt.match(/after_(\d+)/);after&&(ageNumeric=after[1])}data[nextCancer.name]={affected:status,ageAtDiagnosis:ageTxt,numericAgeAtDiagnosis:ageNumeric,notes:notesTxt}}}return[data]},selectAge._getValue=textInput._getValue=select._getValue,this._attachFieldEventListeners(select,["change"]),this._attachFieldEventListeners(selectAge,["change"]),this._attachFieldEventListeners(textInput,["change","keyup"]);var genSelectFunction=function(select,selectAge,enableNotes,disableNotes){return function(){select.selectedIndex>0?(selectAge.enable(),enableNotes()):(selectAge.selectedIndex=0,selectAge.disable(),disableNotes())}},events=["change"];browser.isGecko&&events.push("keyup"),events.each(function(eventName){var selFunc=genSelectFunction(select,selectAge,enableNotes,disableNotes);select.observe(eventName,function(){selFunc()})}),tableRow.insert(label).insert(new Element("td").insert(spanSelect)).insert(new Element("td").insert(spanAge)).insert(new Element("td").insert(expandNotes)),table.insert(tableRow).insert(new Element("tr",{class:"cancer_textarea"}).insert(new Element("td",{colspan:3}).insert(textInput))),result.inputsContainer.insert(table)}var buttonContainer=new Element("div",{class:"button-container"}),noneButton=new Element("span",{class:"patient-menu-button patient-no-cancers-button"}).update("None of the above as of today"),nameHolder=new Element("input",{type:"hidden",name:data.name}),_this=this;return noneButton.observe("click",function(event){for(var i=0;i<cancersUIElements.length;i++){"unaffected"!=cancersUIElements[i].status.value&&(cancersUIElements[i].age.value=""),cancersUIElements[i].status.value="unaffected",cancersUIElements[i].enableNotes(),cancersUIElements[i].age.enable();var birthDate=_this.targetNode.getBirthDate();if(birthDate){var age=getAge(birthDate,_this.targetNode.getDeathDate(),!0);cancersUIElements[i].age.value=age}}Event.fire(nameHolder,"custom:selection:changed"),_this.reposition()}),nameHolder._getValue=cancersUIElements[0].status._getValue,this._attachFieldEventListeners(nameHolder,["custom:selection:changed"]),buttonContainer.update(noneButton).insert(nameHolder),result.inputsContainer.insert(buttonContainer),result},hidden:function(data){var result=this._generateEmptyField(data);result.addClassName("hidden");var input=new Element("input",{type:"hidden",name:data.name,value:""});return result.update(input),result}},show:function(node,x,y){var me=this;this._justOpened=!0,setTimeout(function(){me._justOpened=!1},150),this._onscreen=!0,this.targetNode=node,this._setCrtData(node.getSummary()),this.menuBox.show(),this.reposition(x,y),document.observe("mousedown",this._onClickOutside)},hide:function(){this._justOpened||(this.hideSuggestPicker(),this._onscreen=!1,document.stopObserving("mousedown",this._onClickOutside),this.targetNode&&(this.targetNode.onWidgetHide(),delete this.targetNode),this.menuBox.hide(),this._clearCrtData())},hideSuggestPicker:function(){this.form.select("input.suggest").each(function(item){item._suggest&&item._suggest.clearSuggestions()})},isVisible:function(){return this._onscreen},_onClickOutside:function(event){event.findElement(".suggestItems")||this.hideSuggestPicker(),event.findElement(".menu-box")||event.findElement(".suggestItems")||this.hide()},reposition:function(x,y){if(void 0!==(x=Math.floor(x))&&isFinite(x)){if(this.canvas&&x+this.menuBox.getWidth()>this.canvas.getWidth()+10){var delta=x+this.menuBox.getWidth()-this.canvas.getWidth();editor.getWorkspace().panByX(delta,!0),x-=delta}this.menuBox.style.left=x+"px"}this.menuBox.style.height="";var height="",top="";if(void 0!==y&&isFinite(y))y=Math.floor(y);else if(this.menuBox.style.top.length>0)try{y=parseInt(this.menuBox.style.top.match(/^(\d+)/g)[0])}catch(err){}if((void 0===y||!isFinite(y)||y<0)&&(y=0),this.canvas&&this.menuBox.getHeight()>=this.canvas.getHeight()-1)top=0,height=this.canvas.getHeight()-1+"px";else if(this.canvas.getHeight()<y+this.menuBox.getHeight()+1){var position=y-(y+this.menuBox.getHeight()-this.canvas.getHeight()+1);position<0?(top=0,height=this.canvas.getHeight()-1+"px"):(top=position+"px",height="")}else top=y+"px",height="";this.menuBox.style.top=top,this.menuBox.style.height=height,this.menuBox.style.overflow="auto"},_clearCrtData:function(){var _this=this;Object.keys(this.fieldMap).each(function(name){_this.fieldMap[name].crtValue=_this.fieldMap[name].default,_this._setFieldValue[_this.fieldMap[name].type].call(_this,_this.fieldMap[name].element,_this.fieldMap[name].crtValue),_this.fieldMap[name].inactive=!1})},_setCrtData:function(data){var _this=this;Object.keys(this.fieldMap).each(function(name){if("label"==_this.fieldMap[name].type)return void(data[name]&&(_this.fieldMap[name].inactive=data&&data[name]&&("boolean"==typeof data[name].inactive||"object"==typeof data[name].inactive)?data[name].inactive:_this.fieldMap[name].inactive,_this._setFieldInactive[_this.fieldMap[name].type].call(_this,_this.fieldMap[name].element,_this.fieldMap[name].inactive)));_this.fieldMap[name].crtValue=data&&data[name]&&void 0!==data[name].value?data[name].value:_this.fieldMap[name].crtValue||_this.fieldMap[name].default,_this.fieldMap[name].inactive=data&&data[name]&&("boolean"==typeof data[name].inactive||"object"==typeof data[name].inactive)?data[name].inactive:_this.fieldMap[name].inactive,_this.fieldMap[name].disabled=data&&data[name]&&("boolean"==typeof data[name].disabled||"object"==typeof data[name].disabled)?data[name].disabled:_this.fieldMap[name].disabled,_this._setFieldValue[_this.fieldMap[name].type].call(_this,_this.fieldMap[name].element,_this.fieldMap[name].crtValue),_this._setFieldInactive[_this.fieldMap[name].type].call(_this,_this.fieldMap[name].element,_this.fieldMap[name].inactive),_this._setFieldDisabled[_this.fieldMap[name].type].call(_this,_this.fieldMap[name].element,_this.fieldMap[name].disabled)})},_setFieldValue:{radio:function(container,value){var target=container.down("input[type=radio][value="+value+"]");target&&(target.checked=!0)},checkbox:function(container,value){var checkbox=container.down("input[type=checkbox]");checkbox&&(checkbox.checked=value)},text:function(container,value){var target=container.down("input[type=text]");target&&(target.value=value),this._restoreCursorPositionIfNecessary(target)},label:function(container,value){},textarea:function(container,value){var target=container.down("textarea");target&&(target.value=value),this._restoreCursorPositionIfNecessary(target)},"date-picker":function(container,value){value||(value={decade:"",year:"",month:"",day:""});var year="",month="",day="";value.decade&&!value.year?year=value.decade:value.year&&(year=value.year.toString());var dateEditFormat=editor.getPreferencesManager().getConfigurationOption("dateEditFormat"),dmyInputMode="DMY"==dateEditFormat||"MY"==dateEditFormat;(dmyInputMode||value.year)&&value.month&&(month=value.month.toString()),(dmyInputMode||value.year&&value.month)&&value.day&&(day=value.day.toString());var updated=!1,yearSelect=container.down("select.year");yearSelect&&((option=yearSelect.down("option[value="+year+"]"))||(option=new Element("option",{value:year}).update(year.toString()),yearSelect.insert(option)),option&&!option.selected&&(option.selected=!0,updated=!0));var monthSelect=container.down("select.month");monthSelect&&(option=monthSelect.down("option[value="+month+"]"))&&!option.selected&&(option.selected=!0,updated=!0);var daySelect=container.down("select.day");if(daySelect){var option=daySelect.down("option[value="+day+"]");option&&!option.selected&&(option.selected=!0,updated=!0)}if(updated){var updateElement=container.down(".fuzzy-date-picker");updateElement&&Event.fire(updateElement,"datepicker:date:changed")}},"disease-picker":function(container,values){var _this=this,target=container.down("input[type=text].suggest-omim");target&&target._suggestPicker&&(target._silent=!0,target._suggestPicker.clearAcceptedList(),values&&values.each(function(v){target._suggestPicker.addItem(v.id,v.value,"",null,v.valueAll),_this._updateDisorderColor(v.id,editor.getDisorderLegend().getObjectColor(v.id))}),target._silent=!1)},"ethnicity-picker":function(container,values){var target=container.down("input[type=text].suggest-ethnicity");target&&target._suggestPicker&&(target._silent=!0,target._suggestPicker.clearAcceptedList(),values&&values.each(function(v){target._suggestPicker.addItem(v,v,"")}),target._silent=!1)},"hpo-picker":function(container,values){var target=container.down("input[type=text].suggest-hpo");target&&target._suggestPicker&&(target._silent=!0,target._suggestPicker.clearAcceptedList(),values&&values.each(function(v){target._suggestPicker.addItem(v.id,v.value,"",null,v.valueAll)}),target._silent=!1)},"gene-picker":function(container,values){var _this=this,target=container.down("input[type=text].suggest-genes");target&&target._suggestPicker&&(target._silent=!0,target._suggestPicker.clearAcceptedList(),values&&values.each(function(v){target._suggestPicker.addItem(v,v,""),_this._updateGeneColor(v,editor.getGeneLegend().getObjectColor(v))}),target._silent=!1)},"phenotipsid-picker":function(container,values){var target=container.down("input[type=text].suggest-genes");target&&target._suggestPicker&&(target._silent=!0,target._suggestPicker.clearAcceptedList(),values&&values.each(function(v){target._suggestPicker.addItem(v,v,"")}),target._silent=!1)},select:function(container,value){if(void 0==container.down("select").multiple||0==container.down("select").multiple)(target=container.down("select option[value="+value+"]"))&&(target.selected="selected");else for(var i=0;i<value.length;i++){var target=container.down("select option[value="+value[i]+"]");target&&(target.selected="selected")}},cancerlist:function(container,value){for(var cancerList=editor.getCancerLegend()._getAllSupportedCancers(),i=0;i<cancerList.length;i++){var cancerName=cancerList[i],statusSelect=container.down('select[id="cancer_status_'+cancerName+'"]'),ageSelect=container.down('select[id="cancer_age_'+cancerName+'"]'),notesInput=container.down('"#cancer_notes_'+cancerName+'"'),enableNotesIcon=container.down("label[for="+notesInput.id+"]");if(statusSelect){if(value.hasOwnProperty(cancerName)){if(value[cancerName].hasOwnProperty("affected")&&value[cancerName].affected)optionStatus=statusSelect.down('option[value="affected"]');else optionStatus=statusSelect.down('option[value="unaffected"]');if(value[cancerName].hasOwnProperty("ageAtDiagnosis"))ageOption=ageSelect.down('option[value="'+value[cancerName].ageAtDiagnosis+'"]');else ageOption=ageSelect.down('option[value=""]');value[cancerName].hasOwnProperty("notes")&&""!=value[cancerName].notes?(notesInput.value=value[cancerName].notes,notesInput.show(),notesInput.disabled=!1,enableNotesIcon.hide()):value[cancerName].hasOwnProperty("notes")&&""==value[cancerName].notes?enableNotesIcon.enableNotes():(notesInput.hide(),notesInput.disabled=!0,enableNotesIcon.show(),enableNotesIcon.removeClassName("disabled")),ageSelect.enable()}else{var optionStatus=statusSelect.down('option[value=""]'),ageOption=ageSelect.down('option[value=""]');ageSelect.disable(),notesInput.value="",notesInput.hide(),notesInput.disabled=!0,enableNotesIcon&&enableNotesIcon.disableNotes()}optionStatus&&(optionStatus.selected="selected"),ageOption&&(ageOption.selected="selected")}else alert("This patient is reported to have an unsupported cancer '"+cancerName+"'")}},hidden:function(container,value){var target=container.down("input[type=hidden]");target&&(target.value=value)}},_toggleFieldVisibility:function(container,doHide){doHide?container.addClassName("hidden"):container.removeClassName("hidden")},_setFieldInactive:{label:function(container,inactive){this._toggleFieldVisibility(container,inactive)},radio:function(container,inactive){!0===inactive?container.addClassName("hidden"):(container.removeClassName("hidden"),container.select("input[type=radio]").each(function(item){if(inactive&&"[object Array]"===Object.prototype.toString.call(inactive)){var disableViaOpacity=inactive.indexOf("disableViaOpacity")>=0;inactive.indexOf(item.value)>=0?(item.disable(),disableViaOpacity?Element.setOpacity(item.up(),0):item.up().addClassName("hidden")):(item.enable(),disableViaOpacity?Element.setOpacity(item.up(),1):item.up().removeClassName("hidden"))}else inactive||(item.enable(),Element.setOpacity(item.up(),1),item.up().removeClassName("hidden"))}))},checkbox:function(container,inactive){this._toggleFieldVisibility(container,inactive)},text:function(container,inactive){this._toggleFieldVisibility(container,inactive)},textarea:function(container,inactive){this._toggleFieldVisibility(container,inactive)},"date-picker":function(container,inactive){this._toggleFieldVisibility(container,inactive)},"disease-picker":function(container,inactive){this._toggleFieldVisibility(container,inactive)},"ethnicity-picker":function(container,inactive){this._toggleFieldVisibility(container,inactive)},"hpo-picker":function(container,inactive){this._toggleFieldVisibility(container,inactive)},"gene-picker":function(container,inactive){this._toggleFieldVisibility(container,inactive)},"phenotipsid-picker":function(container,inactive){this._toggleFieldVisibility(container,inactive)},select:function(container,inactive){!0===inactive?container.addClassName("hidden"):(container.removeClassName("hidden"),container.select("option").each(function(item){inactive&&"[object Array]"===Object.prototype.toString.call(inactive)?inactive.indexOf(item.value)>=0?item.addClassName("hidden"):item.removeClassName("hidden"):inactive||item.removeClassName("hidden")}))},cancerlist:function(container,inactive){this._toggleFieldVisibility(container,inactive)},hidden:function(container,inactive){this._toggleFieldVisibility(container,inactive)}},_setFieldDisabled:{radio:function(container,disabled){disabled&&("[object Array]"===Object.prototype.toString.call(disabled)?container.select("input[type=radio]").each(function(item){item.disabled=disabled.indexOf(item.value)>=0}):!0!==disabled&&!1!==disabled||container.select("input[type=radio]").each(function(item){item.disabled=disabled}))},checkbox:function(container,disabled){var target=container.down("input[type=checkbox]");target&&(target.disabled=disabled)},text:function(container,disabled){var target=container.down("input[type=text]");target&&(target.disabled=disabled)},label:function(container,disabled){},textarea:function(container,inactive){},"date-picker":function(container,disabled){Element.select(container,"select").forEach(function(element){disabled?(Helpers.disableMouseclicks(element),element.addClassName("disabled-select"),element.addClassName("no-mouse-interaction")):(Helpers.enableMouseclicks(element),element.removeClassName("disabled-select"),element.removeClassName("no-mouse-interaction"))})},"disease-picker":function(container,disabled){this.__disableEnableSuggestModification(container,disabled)},"ethnicity-picker":function(container,inactive){},"hpo-picker":function(container,disabled){this.__disableEnableSuggestModification(container,disabled)},"gene-picker":function(container,disabled){this.__disableEnableSuggestModification(container,disabled)},"phenotipsid-picker":function(container,inactive){},select:function(container,inactive){Element.select(container,"select").forEach(function(element){inactive?(Helpers.disableMouseclicks(element),element.addClassName("disabled-select"),element.addClassName("no-mouse-interaction")):(Helpers.enableMouseclicks(element),element.removeClassName("disabled-select"),element.removeClassName("no-mouse-interaction"))})},cancerlist:function(container,inactive){},hidden:function(container,inactive){}},__disableEnableSuggestModification:function(container,disabled){var numElements=0;Element.select(container,".delete-tool").forEach(function(element){numElements++,disabled?element.addClassName("hidden"):element.removeClassName("hidden")}),Element.select(container,"input").forEach(function(element){element.disabled=disabled,disabled?numElements>1?element.addClassName("hidden"):element.placeholder="none":(element.removeClassName("hidden"),element.placeholder="")})}});