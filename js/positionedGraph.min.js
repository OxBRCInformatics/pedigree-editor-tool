/*! pedigree-editor-tool - v1.3.0 - 2017-05-19
* https://github.com/OxBRCInformatics/pedigree-editor-tool#readme
* Copyright (c) 2017  Licensed AGPL-3.0 */

function make_dynamic_positioned_graph(inputG,debugOutput){var timer=new Helpers.Timer;DISPLAY_POSITIONING_DEBUG=!!debugOutput;var drawGraph=new PositionedGraph(inputG,10,6,5,24,4);return console.log("=== Running time: "+timer.report()+"ms =========="),new DynamicPositionedGraph(drawGraph)}PositionedGraph=function(baseG,horizontalPersonSeparationDist,horizontalRelSeparationDist,maxInitOrderingBuckets,maxOrderingIterations,maxXcoordIterations,performVerticalPositioning,suggestedRanks){this.GG=void 0,this.ranks=void 0,this.maxRank=void 0,this.order=void 0,this.positions=void 0,this.vertLevel=void 0,this.rankY=void 0,this.ancestors=void 0,this.consangr=void 0,this.initialize(baseG,horizontalPersonSeparationDist,horizontalRelSeparationDist,maxInitOrderingBuckets,maxOrderingIterations,maxXcoordIterations,performVerticalPositioning,suggestedRanks)},PositionedGraph.prototype={maxInitOrderingBuckets:5,maxOrderingIterations:24,maxXcoordIterations:4,xCoordEdgeWeightValue:!0,horizontalPersonSeparationDist:10,horizontalTwinSeparationDist:8,horizontalRelSeparationDist:6,yDistanceNodeToChildhub:20,yDistanceChildhubToNode:14,yExtraPerHorizontalLine:4,yAttachPortHeight:1.5,yCommentLineHeight:2.9,initialize:function(baseG,horizontalPersonSeparationDist,horizontalRelSeparationDist,maxInitOrderingBuckets,maxOrderingIterations,maxXcoordIterations,performVerticalPositioning,suggestedRanks){if(horizontalPersonSeparationDist&&(this.horizontalPersonSeparationDist=horizontalPersonSeparationDist),horizontalRelSeparationDist&&(this.horizontalRelSeparationDist=horizontalRelSeparationDist),maxInitOrderingBuckets&&(this.maxInitOrderingBuckets=maxInitOrderingBuckets),maxOrderingIterations&&(this.maxOrderingIterations=maxOrderingIterations),maxXcoordIterations&&(this.maxXcoordIterations=maxXcoordIterations),this.maxInitOrderingBuckets>8)throw"Too many ordering buckets: number of permutations ("+this.maxInitOrderingBuckets.toString()+"!) is too big";var timer=new Helpers.Timer;this.ranks=this.rank(baseG,suggestedRanks),this.maxRank=Math.max.apply(null,this.ranks),timer.printSinceLast("=== Ranking runtime: "),this.GG=baseG.makeGWithSplitMultiRankEdges(this.ranks);var disconnectedTwins=this.disconnectTwins();timer.restart(),this.order=this.ordering(this.maxInitOrderingBuckets,this.maxOrderingIterations,disconnectedTwins),timer.printSinceLast("=== Ordering runtime: "),this.reRankRelationships(),this.reconnectTwins(disconnectedTwins);var ancestors=this.findAllAncestors();this.ancestors=ancestors.ancestors,this.consangr=ancestors.consangr,timer.printSinceLast("=== Ancestors + re-ranking runtime: "),this.positions=this.position(),timer.printSinceLast("=== Positioning runtime: "),performVerticalPositioning&&(this.vertLevel=this.positionVertically(),this.rankY=this.computeRankY(),timer.printSinceLast("=== Vertical spacing runtime: "))},rank:function(baseG,suggestedRanks){if(suggestedRanks&&(ranks=this.init_rank(baseG,suggestedRanks)))return ranks;var ranks=this.init_rank(baseG);return this.lower_ranks(baseG,ranks),ranks},init_rank:function(baseG,suggestedRanks){if(0==baseG.v.length)return[];for(var ranks=[],numRankedParents=[],i=0;i<baseG.getNumVertices();i++)ranks.push(-1),numRankedParents.push(0);var queue=new Queue;if(suggestedRanks){for(i=0;i<suggestedRanks.length;i++)for(var nodesAtRank=suggestedRanks[i],j=0;j<nodesAtRank.length;j++)ranks[nodesAtRank[j]]=3*i+1;for(var v=0;v<baseG.getNumVertices();v++){if(baseG.isPerson(v)&&-1==ranks[v])return null;baseG.isRelationship(v)&&queue.push(v)}}else{var parentlessNodes=baseG.getLeafAndParentlessNodes().parentlessNodes;queue.setTo(parentlessNodes)}for(;queue.size()>0;){for(var nextNode=queue.pop(),inEdges=baseG.getInEdges(nextNode),useRank=1,i=0;i<inEdges.length;i++)ranks[v=inEdges[i]]>=useRank&&(useRank=ranks[v]+1);ranks[nextNode]=useRank;for(var outEdges=baseG.getOutEdges(nextNode),u=0;u<outEdges.length;u++){var vertex=outEdges[u];if(suggestedRanks&&-1!=ranks[vertex]&&ranks[vertex]<=ranks[nextNode])return null;numRankedParents[vertex]++;var numVertexInEdges=baseG.getInEdges(vertex).length;numRankedParents[vertex]==numVertexInEdges&&queue.push(vertex)}}return ranks},lower_ranks:function(baseG,ranks){if(!(ranks.length<=1)){for(console.log("Re-ranking ranks before: "+Helpers.stringifyObject(ranks));;){for(var nodeColor=[],component=[],minOutEdgeInfo=[],v=0;v<baseG.getNumVertices();v++)nodeColor.push(null);for(var currentComponentColor=0,v=0;v<baseG.getNumVertices();v++)if(null==nodeColor[v]){var thisComponent=[],potentialLongEdges={},queue=new Queue;for(queue.push(v);queue.size()>0;){var nextV=queue.pop();if(null==nodeColor[nextV]){nodeColor[nextV]=currentComponentColor,thisComponent.push(nextV);var rankV=ranks[nextV],allEdges=baseG.getAllEdgesWithWeights(nextV);for(var vv in allEdges)if(allEdges.hasOwnProperty(vv)&&nodeColor[vv]!=currentComponentColor){var edgeLength=Math.abs(rankV-ranks[vv]);1==edgeLength?null==nodeColor[vv]&&queue.push(vv):allEdges[vv].out&&(potentialLongEdges[vv]={length:edgeLength,weight:allEdges[vv].weight})}}}component[currentComponentColor]=thisComponent,minOutEdgeInfo[currentComponentColor]={length:1/0,weight:0};for(var vv in potentialLongEdges)if(potentialLongEdges.hasOwnProperty(vv)){if(nodeColor[vv]==currentComponentColor)continue;var nextEdge=potentialLongEdges[vv];(nextEdge.length<minOutEdgeInfo[currentComponentColor].length||nextEdge.length==minOutEdgeInfo[currentComponentColor].length&&nextEdge.weight>minOutEdgeInfo[currentComponentColor].weight)&&(minOutEdgeInfo[currentComponentColor]=nextEdge)}currentComponentColor++}if(1==currentComponentColor)return;for(var minComponent=0,i=1;i<component.length;i++)(minOutEdgeInfo[i].weight>minOutEdgeInfo[minComponent].weight||minOutEdgeInfo[i].weight==minOutEdgeInfo[minComponent].weight&&minOutEdgeInfo[i].length<minOutEdgeInfo[minComponent].length)&&(minComponent=i);for(v=0;v<component[minComponent].length;v++)ranks[component[minComponent][v]]+=minOutEdgeInfo[minComponent].length-1}console.log("Ranks after re-ranking: "+Helpers.stringifyObject(ranks))}},ordering:function(maxInitOrderingBuckets,maxOrderingIterations,disconnectedTwins){if(0==this.GG.v.length)return new Ordering([],[]);var best=void 0,bestCrossings=1/0,leafAndRootlessInfo=this.GG.getLeafAndParentlessNodes(),rootlessPartners=this.findAllRootlessPartners(leafAndRootlessInfo);this.disconnectRootlessPartners(rootlessPartners);var leafSiblings=this.findLeafSiblings(leafAndRootlessInfo);this.disconnectLeafSiblings(leafSiblings);for(var permutationsRoots=this.computePossibleParentlessNodePermutations(maxInitOrderingBuckets,leafAndRootlessInfo,rootlessPartners),permutationsLeafs=this.computePossibleLeafNodePermutations(maxInitOrderingBuckets,leafAndRootlessInfo,leafSiblings,disconnectedTwins),initOrderIterTotal=0,useStack=!1,timer=new Helpers.Timer;;){for(var initOrderIter=0;initOrderIter<permutationsRoots.length&&(initOrderIterTotal++,order=this.init_order_top_to_bottom(permutationsRoots[initOrderIter],useStack),this.transpose(order,!1,4*bestCrossings+5),!((numCrossings=this.edge_crossing(order))<bestCrossings&&(best=order.copy(),bestCrossings=numCrossings,0==numCrossings)));initOrderIter++);if(0==bestCrossings)break;for(var initOrderIter2=0;initOrderIter2<permutationsLeafs.length&&(initOrderIterTotal++,order=this.init_order_bottom_to_top(permutationsLeafs[initOrderIter2],useStack),this.transpose(order,!1,4*bestCrossings+5),!((numCrossings=this.edge_crossing(order))<bestCrossings&&(best=order.copy(),bestCrossings=numCrossings,0==numCrossings)));initOrderIter2++);if(0==bestCrossings)break;if(useStack)break;useStack=!0}timer.printSinceLast("Initial ordering: ");var bestEdgeLengthScore=this.edge_length_score(best);console.log("Initial ordering: "+Helpers.stringifyObject(best.order)),console.log("Initial ordering:  numCrossings= "+bestCrossings+",  edhgeLengthScore= "+bestEdgeLengthScore);for(var noChangeIterations=0,order=best.copy(),i=0;i<maxOrderingIterations;i++){var changed=this.wmedian(order,i);this.transpose(order,!0);var numCrossings=this.edge_crossing(order),edgeLengthScore=this.edge_length_score(order);if(numCrossings<bestCrossings||numCrossings==bestCrossings&&edgeLengthScore<bestEdgeLengthScore)console.log("ordering: new better one selected ("+numCrossings+" crossings, "+edgeLengthScore+" edgeLengthScore)"),best=order.copy(),bestCrossings=numCrossings,bestEdgeLengthScore=edgeLengthScore,noChangeIterations=0;else if(changed||noChangeIterations++,6==noChangeIterations)break}this.transpose(best,!0),this.reconnectRootlessPartners(best,rootlessPartners),this.transpose(best,!0),this.reconnectLeafSiblings(best,leafSiblings),timer.restart();var newBestCrossings=this.transposeLongEdges(best,bestCrossings);return timer.printSinceLast("Ordering long edges: "),console.log("Ordering stats:  initOrderIter= "+initOrderIterTotal+",  reOrderingIter= "+i+",  noChangeIterations= "+noChangeIterations),console.log("Final ordering: "+Helpers.stringifyObject(best.order)),console.log("Final ordering:  numCrossings= "+newBestCrossings),best},findAllRootlessPartners:function(leafAndRootlessInfo){for(var rootlessPartners={},i=0;i<leafAndRootlessInfo.parentlessNodes.length;i++){var v=leafAndRootlessInfo.parentlessNodes[i];if(1==this.GG.getOutEdges(v).length){var relationShipNode=this.GG.downTheChainUntilNonVirtual(this.GG.getOutEdges(v)[0]),parents=this.GG.getParents(relationShipNode),otherParent=parents[0]==v?parents[1]:parents[0];if(this.ranks[v]!=this.ranks[otherParent])continue;this.GG.getInEdges(otherParent).length>0&&(rootlessPartners[otherParent]?rootlessPartners[otherParent].push(v):rootlessPartners[otherParent]=[v])}}return rootlessPartners},disconnectRootlessPartners:function(rootlessPartners){for(var p in rootlessPartners)if(rootlessPartners.hasOwnProperty(p))for(var rootless=rootlessPartners[p],i=0;i<rootless.length;i++){var v=rootless[i],relNode=this.GG.getOutEdges(v)[0];Helpers.removeFirstOccurrenceByValue(this.GG.inedges[relNode],v)}},reconnectRootlessPartners:function(order,rootlessPartners){for(var p in rootlessPartners)if(rootlessPartners.hasOwnProperty(p)){for(var partnersToTheLeft=0,partnersToTheRight=0,pOrder=order.vOrder[p],rank=this.ranks[p],pRelationships=this.GG.getOutEdges(p),j=0;j<pRelationships.length;j++)if(this.GG.isRelationship(pRelationships[j])){var parents=this.GG.getInEdges(pRelationships[j]);if(2==parents.length){var partner=parents[0]==p?parents[1]:parents[0];order.vOrder[partner]>pOrder?partnersToTheRight++:partnersToTheLeft++}}for(var rootless=rootlessPartners[p],i=0;i<rootless.length;i++){var v=rootless[i],relNode=this.GG.getOutEdges(v)[0];this.GG.inedges[relNode].push(v),partnersToTheRight<=partnersToTheLeft?(partnersToTheRight++,order.insert(rank,pOrder+1,v)):(partnersToTheLeft++,order.insert(rank,pOrder,v))}}},findLeafSiblings:function(leafAndRootlessInfo){for(var leafSiblings={},i=0;i<leafAndRootlessInfo.leafNodes.length;i++){var v=leafAndRootlessInfo.leafNodes[i],childHubNode=this.GG.getInEdges(v)[0];if(!leafSiblings.hasOwnProperty(childHubNode)){var children=this.GG.getOutEdges(childHubNode);if(children.length>1){leafSiblings[childHubNode]=[];for(var keepChild=v,j=0;j<children.length;j++){var child=children[j],outNum=this.GG.getOutEdges(child).length;child!=keepChild&&0==outNum&&leafSiblings[childHubNode].push(child)}}}}return leafSiblings},disconnectLeafSiblings:function(leafSiblings){for(var p in leafSiblings)if(leafSiblings.hasOwnProperty(p))for(var leaves=leafSiblings[p],i=0;i<leaves.length;i++){var l=leaves[i];Helpers.removeFirstOccurrenceByValue(this.GG.v[p],l)}},reconnectLeafSiblings:function(order,leafSiblings){for(var p in leafSiblings)if(leafSiblings.hasOwnProperty(p))for(var leaves=leafSiblings[p],i=0;i<leaves.length;i++){var l=leaves[i];this.GG.v[p].push(l);var rank=this.ranks[l];order.insert(rank,0,l);for(var bestO=0,bestCross=this.edge_crossing(order,rank),bestScore=this.edge_length_score(order,rank),o=0;o<order.order[rank].length-1;o++){order.exchange(rank,o,o+1);var newEdgeCrossings=this.edge_crossing(order,rank),newLengthScore=this.edge_length_score(order,rank);(newEdgeCrossings<bestCross||newEdgeCrossings==bestCross&&newLengthScore<bestScore)&&(bestO=o+1,bestCross=newEdgeCrossings,bestScore=newLengthScore)}order.moveVertexToOrder(rank,order.vOrder[l],bestO)}},disconnectTwins:function(){for(var disconnectedTwins={},handled={},v=0;v<=this.GG.getMaxRealVertexId();v++)if(!handled[v]&&this.GG.isPerson(v)&&null!=this.GG.getTwinGroupId(v)){disconnectedTwins[v]=[];for(var childhub=this.GG.getInEdges(v)[0],allTwins=this.GG.getAllTwinsOf(v),i=0;i<allTwins.length;i++){var twin=allTwins[i];if(twin!=v){Helpers.removeFirstOccurrenceByValue(this.GG.v[childhub],twin);for(var outEdges=this.GG.getOutEdges(twin),j=0;j<outEdges.length;j++){var rel=outEdges[j];Helpers.replaceInArray(this.GG.inedges[rel],twin,v),this.GG.v[v].push(rel),this.GG.weights[v].hasOwnProperty(rel)?this.GG.weights[v][rel]+=this.GG.weights[twin][rel]:this.GG.weights[v][rel]=this.GG.weights[twin][rel]}disconnectedTwins[v].push(twin),handled[twin]=!0}}}return disconnectedTwins},reconnectTwins:function(disconnectedTwins){for(var v in disconnectedTwins)if(disconnectedTwins.hasOwnProperty(v)){var rank=this.ranks[v],childhub=this.GG.getInEdges(v)[0],allDisconnectedTwins=disconnectedTwins[v],GG=this.GG,byNumberOfRelationships=function(a,b){var an=GG.getOutEdges(a).length;return GG.getOutEdges(b).length-an};allDisconnectedTwins.sort(byNumberOfRelationships);for(var i=0;i<allDisconnectedTwins.length;i++){for(var twin=allDisconnectedTwins[i],outEdges=this.GG.getOutEdges(twin),j=0;j<outEdges.length;j++){rel=outEdges[j];Helpers.removeFirstOccurrenceByValue(this.GG.inedges[rel],v),Helpers.removeFirstOccurrenceByValue(this.GG.v[v],rel),this.GG.weights[v][rel]==this.GG.weights[twin][rel]?delete this.GG.weights[v][rel]:this.GG.weights[v][rel]-=this.GG.weights[twin][rel],this.GG.inedges[rel].push(twin)}var insertOrder=this.findBestTwinInsertPosition(twin,this.GG.getOutEdges(twin),this.order);this.order.insert(rank,insertOrder,twin),this.GG.v[childhub].push(twin);for(var groupID=this.GG.getTwinGroupId(twin),outEdges=this.GG.getOutEdges(twin),j=0;j<outEdges.length;j++){var rel=outEdges[j];if(!this.GG.isVirtual(rel)){var parents=this.GG.getInEdges(rel),otherParent=parents[0]==twin?parents[1]:parents[0];if(this.GG.getTwinGroupId(otherParent)==groupID&&this.GG.hasEdge(childhub,otherParent)){var orderRel=this.order.vOrder[rel],orderTwin1=this.order.vOrder[twin],orderTwin2=this.order.vOrder[otherParent];if(1!=Math.abs(orderTwin1-orderTwin2)){if(1==this.GG.getOutEdges(twin).length)orderTwin1<orderTwin2?this.order.moveVertexToOrder(rank,orderTwin1,orderTwin2):this.order.moveVertexToOrder(rank,orderTwin1,orderTwin2+1);else{if(1!=this.GG.getOutEdges(otherParent).length)continue;orderTwin2<orderTwin1?this.order.moveVertexToOrder(rank,orderTwin2,orderTwin1):this.order.moveVertexToOrder(rank,orderTwin2,orderTwin1+1)}orderRel=this.order.vOrder[rel],orderTwin1=this.order.vOrder[twin],orderTwin2=this.order.vOrder[otherParent]}orderTwin1<orderTwin2?this.order.moveVertexToOrder(rank,orderRel,orderTwin2):this.order.moveVertexToOrder(rank,orderRel,orderTwin1)}}}}}},computePossibleParentlessNodePermutations:function(maxInitOrderingBuckets,leafAndRootlessInfo,rootlessPartners){var buckets=[];console.log("maxInitOrderingBuckets: "+maxInitOrderingBuckets);var handled={};for(var p in rootlessPartners)if(rootlessPartners.hasOwnProperty(p))for(var rootless=rootlessPartners[p],i=0;i<rootless.length;i++)handled[rootless[i]]=!0;for(i=0;i<leafAndRootlessInfo.parentlessNodes.length;i++){var v=leafAndRootlessInfo.parentlessNodes[i];if(!handled.hasOwnProperty(v)){var nextBucket=[];if(nextBucket.push(v),handled[v]=!0,1==this.GG.getOutEdges(v).length){var rel=this.GG.downTheChainUntilNonVirtual(this.GG.getOutEdges(v)[0]),parents=this.GG.getParents(rel),otherPartner=parents[0]==v?parents[1]:parents[0];handled.hasOwnProperty(otherPartner)||0!=this.GG.getInEdges(otherPartner).length||1!=this.GG.getOutEdges(otherPartner).length||(nextBucket.push(otherPartner),handled[otherPartner]=!0)}buckets.push(nextBucket)}}buckets.length>maxInitOrderingBuckets&&this.mergeBucketsUntilNoMoreThanGivenLeft(buckets,maxInitOrderingBuckets);var permutations=[];return Helpers.permute2DArrayInFirstDimension(permutations,buckets,0),Helpers.printObject(buckets),console.log("Found "+permutations.length+" permutations of parentless nodes"),permutations},computePossibleLeafNodePermutations:function(maxInitOrderingBuckets,leafAndRootlessInfo,leafSiblings,disconnectedTwins){var buckets=[],handled={};for(var p in leafSiblings)if(leafSiblings.hasOwnProperty(p))for(var leaves=leafSiblings[p],i=0;i<leaves.length;i++)handled[leaves[i]]=!0;for(var p in disconnectedTwins)if(disconnectedTwins.hasOwnProperty(p))for(var twins=disconnectedTwins[p],i=0;i<twins.length;i++)handled[twins[i]]=!0;for(var nextBucket=0,i=0;i<leafAndRootlessInfo.leafNodes.length;i++){var v=leafAndRootlessInfo.leafNodes[i];if(!handled.hasOwnProperty(v)){if((nextBucket=[]).push(v),handled[v]=!0,1!=this.GG.getInEdges(v).length)throw"Assertion failed: only one in edge into a leaf node";for(var childhubNode=this.GG.getInEdges(v)[0],j=i+1;j<leafAndRootlessInfo.leafNodes.length;j++){var u=leafAndRootlessInfo.leafNodes[j];handled.hasOwnProperty(u)||childhubNode==this.GG.getInEdges(u)[0]&&(nextBucket.push(u),handled[u]=!0)}buckets.push(nextBucket)}}buckets.length>maxInitOrderingBuckets&&this.mergeBucketsUntilNoMoreThanGivenLeft(buckets,maxInitOrderingBuckets,!0);var permutations=[];return Helpers.permute2DArrayInFirstDimension(permutations,buckets,0),Helpers.printObject(buckets),console.log("Found "+permutations.length+" permutations of leaf nodes"),permutations},mergeBucketsUntilNoMoreThanGivenLeft:function(buckets,maxInitOrderingBuckets,useInEdges){for(console.log("original buckets: "+Helpers.stringifyObject(buckets));buckets.length>maxInitOrderingBuckets&&this.mergeMostRelatedBuckets(buckets,useInEdges););console.log("merged buckets: "+Helpers.stringifyObject(buckets))},mergeMostRelatedBuckets:function(buckets,useInEdges){for(var minDistance=1/0,bucket1=0,bucket2=1,i=0;i<buckets.length-1;i++)for(var j=i+1;j<buckets.length;j++){var dist=this.findDistanceBetweenBuckets(buckets[i],buckets[j],useInEdges);(dist<minDistance||dist==minDistance&&buckets[i].length+buckets[j].length<buckets[bucket1].length+buckets[bucket2].length)&&(minDistance=dist,bucket1=i,bucket2=j)}if(minDistance==1/0)throw"Assumption failed: unrelated buckets";for(i=0;i<buckets[bucket2].length;i++)buckets[bucket1].push(buckets[bucket2][i]);return buckets.splice(bucket2,1),!0},findDistanceBetweenBuckets:function(bucket1nodes,bucket2nodes,useInEdges){for(var distance=[],i=0;i<bucket1nodes.length;i++)distance[bucket1nodes[i]]=1;for(i=0;i<bucket2nodes.length;i++)distance[bucket2nodes[i]]=-1;var queue1=new Queue;queue1.setTo(bucket1nodes);var queue2=new Queue;queue2.setTo(bucket2nodes);for(var iter=0;iter<100;){if(iter++,0==queue1.size()&&0==queue2.size())return 1/0;for(var nextQueue1=new Queue;queue1.size()>0;)for(var dist=distance[nextNode=queue1.pop()],edges=useInEdges?this.GG.getInEdges(nextNode):this.GG.getOutEdges(nextNode),j=0;j<edges.length;j++){if(distance[nextV=edges[j]]<0)return-distance[nextV]+dist;distance[nextV]=dist+1,nextQueue1.push(nextV)}queue1=nextQueue1;for(var nextQueue2=new Queue;queue2.size()>0;)for(var nextNode=queue2.pop(),dist=distance[nextNode],edges=useInEdges?this.GG.getInEdges(nextNode):this.GG.getOutEdges(nextNode),j=0;j<edges.length;j++){var nextV=edges[j];if(distance[nextV]>0)return distance[nextV]-dist;distance[nextV]=dist-1,nextQueue2.push(nextV)}queue2=nextQueue2}throw"Assertion failed: possible loop detected"},init_order_top_to_bottom:function(parentlessNodes,useStack){for(var order=[],vOrder=[],r=0;r<=this.maxRank;r++)order[r]=[];for(var i=0;i<this.GG.getNumVertices();i++)vOrder[i]=void 0;var queue=useStack?new Stack:new Queue;for(queue.setTo(parentlessNodes);queue.size()>0;){var next=queue.pop();if(void 0==vOrder[next]){var rank=this.ranks[next],nextOrder=order[rank].length;vOrder[next]=nextOrder,order[rank].push(next);for(var outEdges=this.GG.getOutEdges(next),u=0;u<outEdges.length;u++)queue.push(outEdges[u])}}return new Ordering(order,vOrder)},init_order_bottom_to_top:function(leafNodes,useStack){for(var order=[],vOrder=[],r=0;r<=this.maxRank;r++)order[r]=[];for(var i=0;i<this.GG.getNumVertices();i++)vOrder[i]=void 0;var queue=useStack?new Stack:new Queue;for(queue.setTo(leafNodes);queue.size()>0;){var next=queue.pop();if(void 0==vOrder[next]){var rank=this.ranks[next],nextOrder=order[rank].length;vOrder[next]=nextOrder,order[rank].push(next);for(var inEdges=this.GG.getInEdges(next),u=0;u<inEdges.length;u++)queue.push(inEdges[u])}}return new Ordering(order,vOrder)},edge_length_score:function(order,onlyRank){for(var totalEdgeLengthInPositions=0,totalEdgeLengthInChildren=0,totalPenaltyForFatherOnRight=0,totalPenaltyForChildAgeOrder=0,i=0;i<this.GG.getNumVertices();i++){if(onlyRank){var rank=this.ranks[i];if(rank<onlyRank-1||rank>onlyRank+1)continue}if(this.GG.isRelationship(i)){var parents=this.GG.getInEdges(i);if(2==parents.length){if(this.ranks[parents[0]]!=this.ranks[parents[1]])continue;var order1=order.vOrder[parents[0]],order2=order.vOrder[parents[1]];totalEdgeLengthInPositions+=Math.abs(order1-order2);var leftParent=order1<order2?parents[0]:parents[1];"F"==this.GG.properties[leftParent].gender&&totalPenaltyForFatherOnRight++}}if(this.GG.isChildhub(i)){var children=this.GG.getOutEdges(i);if(children.length>1){var orderedChildren=order.sortByOrder(children),minOrder=order.vOrder[orderedChildren[0]];totalEdgeLengthInChildren+=order.vOrder[orderedChildren[orderedChildren.length-1]]-minOrder;for(var leftChildDOB=this.GG.properties[orderedChildren[0]].hasOwnProperty("dob")?new PedigreeDate(this.GG.properties[orderedChildren[0]].dob):null,j=1;j<orderedChildren.length;j++){var thisChildDOB=this.GG.properties[orderedChildren[j]].hasOwnProperty("dob")?new PedigreeDate(this.GG.properties[orderedChildren[j]].dob):null;null!=thisChildDOB&&(null==leftChildDOB?totalPenaltyForChildAgeOrder++:leftChildDOB.getTime()>thisChildDOB.getTime()&&totalPenaltyForChildAgeOrder++),leftChildDOB=thisChildDOB}}}}return 1e5*totalEdgeLengthInPositions+1e3*totalEdgeLengthInChildren+5*totalPenaltyForFatherOnRight+totalPenaltyForChildAgeOrder},edge_crossing:function(order,onlyRank,dontUseApproximationForRelationshipEdges){for(var numCrossings=0,rankFrom=onlyRank?Math.max(1,onlyRank-1):1,rankTo=onlyRank||this.maxRank,r=rankFrom;r<=rankTo;++r)for(var numVert=order.order[r].length,i=0;i<numVert-1;++i)for(var v=order.order[r][i],isChhub=this.GG.isChildhub(v),outEdges=this.GG.getOutEdges(v),len=outEdges.length,j=0;j<len;++j){var targetV=outEdges[j];if(!dontUseApproximationForRelationshipEdges&&this.GG.isRelationship(targetV)){var parents=this.GG.getInEdges(targetV);if(2==parents.length){var order1=order.vOrder[parents[0]],order2=order.vOrder[parents[1]];numCrossings+=(crossings=this.numNodesWithParentsInBetween(order,r,order1,order2))/2}}var crossings=this._edge_crossing_crossingsByOneEdge(order,v,targetV);numCrossings+=crossings*(isChhub&&null!=this.GG.getTwinGroupId(targetV)?2:1)}return numCrossings},_edge_crossing_crossingsByOneEdge:function(order,v,targetV){var rankV=this.ranks[v],rankT=this.ranks[targetV],orderV=order.vOrder[v],orderT=order.vOrder[targetV];if(rankV==rankT)return this.numNodesWithParentsInBetween(order,rankV,orderV,orderT);for(var crossings=0,verticesAtRankV=order.order[rankV],ord=orderV+1;ord<verticesAtRankV.length;++ord)for(var vertex=verticesAtRankV[ord],isChhub=this.GG.isChildhub(vertex),outEdges=this.GG.getOutEdges(vertex),len=outEdges.length,j=0;j<len;++j){var target=outEdges[j];order.vOrder[target]<orderT&&(crossings++,isChhub&&null!=this.GG.getTwinGroupId(target)&&crossings++)}return crossings>0&&this.GG.isPerson(v)&&this.GG.isVirtual(targetV)&&(crossings-=.1),crossings},numNodesWithParentsInBetween:function(order,rank,order1,order2){for(var numNodes=0,fromBetween=Math.min(order1,order2)+1,toBetween=Math.max(order1,order2)-1,o=fromBetween;o<=toBetween;o++){var b=order.order[rank][o];if(this.GG.getInEdges(b).length>0)for(var i=0;i<this.GG.getInEdges(b).length;i++){var u=this.GG.getInEdges(b)[i];if(this.ranks[u]!=rank)numNodes++;else{var orderOther=order.vOrder[u];(orderOther<fromBetween-1||orderOther>toBetween+1)&&numNodes++}}this.GG.isPerson(b)&&null!=this.GG.getTwinGroupId(b)&&numNodes++}return numNodes},wmedian:function(order,iter){if(iter%2==0){for(r=2;r<=this.maxRank;r++)if(!(order.order[r].length<=1||order.order[r-1].length<=1)){for(var median=[],len=order.order[r].length,i=0;i<len;i++)median[v=order.order[r][i]]=this.median_value(order,v,r-1);this.sort_orders(order,r,median)}}else for(var r=this.maxRank-1;r>=1;r--)if(!(order.order[r].length<=1||order.order[r+1].length<=1)){for(var median=[],len=order.order[r].length,i=0;i<len;i++){var v=order.order[r][i];median[v]=this.median_value(order,v,r+1)}this.sort_orders(order,r,median)}return!1},median_value:function(order,v,adj_rank){var P=this.adj_position(order,v,adj_rank);if(0==P.length)return-1;var m=Math.floor(P.length/2);if(P.length%2==1)return P[m];if(2==P.length)return(P[0]+P[1])/2;var left=P[m-1]-P[0],right=P[P.length-1]-P[m];return(P[m-1]*right+P[m]*left)/(left+right)},adj_position:function(order,v,adj_rank){for(var result=[],verticesAtRankAdj=order.order[adj_rank],len=verticesAtRankAdj.length,j=0;j<len;j++){var adjV=verticesAtRankAdj[j];(this.GG.hasEdge(adjV,v)||this.GG.hasEdge(v,adjV))&&result.push(j)}return result},sort_orders:function(order,rank,weightToUseForThisRank){var sortfunc=function(a,b){return weightToUseForThisRank[a]-weightToUseForThisRank[b]};order.order[rank].sort(sortfunc);for(var changed=!1,i=0;i<order.order[rank].length;i++){var v=order.order[rank][i];order.vOrder[v]!=i&&(order.vOrder[v]=i,changed=!0)}return changed},isChhubsOrderOK:function(rank,order){for(var i=0;i<order.order[rank].length-1;i++){var v=order.order[rank][i];if(this.GG.isChildhub(v)){for(var next=i+1;next<order.order[rank].length&&!this.GG.isChildhub(order.order[rank][next]);next++);var u=order.order[rank][next];if(this.GG.isChildhub(u)){var aboveV=this.GG.getInEdges(v)[0],aboveU=this.GG.getInEdges(u)[0];if(order.vOrder[aboveV]>order.vOrder[aboveU])return!1}}}return!0},placeChhubsInCorrectOrder:function(rank,order){var GG=this.GG,byRelOrder=function(a,b){var above1=GG.getInEdges(a)[0],above2=GG.getInEdges(b)[0];return above1==above2?order.vOrder[a]-order.vOrder[b]:order.vOrder[above1]-order.vOrder[above2]};order.order[rank].sort(byRelOrder);for(var i=0;i<order.order[rank].length;i++)order.vOrder[order.order[rank][i]]=i},transpose:function(order,doMinorImprovements,stopIfMoreThanCrossings){var improved=!0,totalEdgeCrossings=this.edge_crossing(order);if(!(stopIfMoreThanCrossings&&totalEdgeCrossings>stopIfMoreThanCrossings))for(var iter=0;improved&&(iter++,doMinorImprovements||!(iter>4));){if(iter>100){console.log("Assertion failed: too many iterations in transpose(), NumIter == "+iter);break}improved=!1;for(var r=1;r<=this.maxRank;r++)if(r%3!=0){var numEdgeCrossings=this.edge_crossing(order,r);if(doMinorImprovements||0!=numEdgeCrossings){for(var edgeLengthScore=doMinorImprovements?this.edge_length_score(order,r):0,rankImproved=!1,maxIndex=order.order[r].length-1,i=0;i<maxIndex;++i){order.exchange(r,i,i+1);var newEdgeCrossings=this.edge_crossing(order,r),newLengthScore=doMinorImprovements?this.edge_length_score(order,r):0;if(newEdgeCrossings<numEdgeCrossings||newEdgeCrossings==numEdgeCrossings&&newLengthScore<edgeLengthScore){if(improved=!0,rankImproved=!0,totalEdgeCrossings-=numEdgeCrossings-newEdgeCrossings,numEdgeCrossings=newEdgeCrossings,edgeLengthScore=newLengthScore,!doMinorImprovements){if(0==totalEdgeCrossings)return;if(0==numEdgeCrossings)break}}else order.exchange(r,i,i+1)}rankImproved&&r--}}else this.placeChhubsInCorrectOrder(r,order)}},transposeLongEdges:function(order,numCrossings,postReRanking){if(0==numCrossings)return numCrossings;for(var maxRealId=this.GG.getMaxRealVertexId(),numVert=this.GG.getNumVertices(),checked=[],v=maxRealId+1;v<numVert;v++)checked[v]=!1;for(v=maxRealId+1;v<numVert;v++)if(!checked[v]&&0!=this.ranks[v]){for(var head=v;this.GG.isVirtual(this.GG.getInEdges(head)[0]);)head=this.GG.getInEdges(head)[0];var chain=[],next=head;do{checked[next]=!0,chain.push(next),next=this.GG.getOutEdges(next)[0]}while(this.GG.isVirtual(next));chain.push(next);var bestScore=numCrossings,bestOrder=void 0;if(console.log("Optimizing long edge placement: chain "+Helpers.stringifyObject(chain)),chain.length<=10){var beforeChainEnd=2;postReRanking&&(beforeChainEnd=4);for(var i=0;i<chain.length-beforeChainEnd;i++)for(var piece1=chain[i],piece2=chain[i+1],piece3=chain[i+2],rank1=this.ranks[piece1],rank2=this.ranks[piece2],rank3=this.ranks[piece3],ord1=order.vOrder[piece1],ord2=order.vOrder[piece2],ord3=order.vOrder[piece3],move1=-4;move1<=4;move1++)if(order.canMove(rank1,ord1,move1))for(var move2=-4;move2<=4;move2++)if(order.canMove(rank2,ord2,move2))for(var move3=-4;move3<=4;move3++)if((0!=move1||0!=move2||0!=move3)&&order.canMove(rank3,ord3,move3)){var newOrder=order.copy();newOrder.move(rank1,ord1,move1),newOrder.move(rank2,ord2,move2),newOrder.move(rank3,ord3,move3);var newCross=this.edge_crossing(newOrder,!1,postReRanking);newCross<bestScore&&(bestScore=newCross,bestOrder=[rank1,ord1,move1,rank2,ord2,move2,rank3,ord3,move3])}}if(bestScore<numCrossings&&(order.move(bestOrder[0],bestOrder[1],bestOrder[2]),order.move(bestOrder[3],bestOrder[4],bestOrder[5]),order.move(bestOrder[6],bestOrder[7],bestOrder[8]),numCrossings=bestScore),0==numCrossings)break}return numCrossings},reRankRelationships:function(){if(void 0!==this.maxRank&&0!=this.GG.v.length){for(var handled={},initialOrdering=this.order.copy(),r=2;r<=this.maxRank;r+=3){for(oo=0;oo<initialOrdering.order[r].length;oo++){i=initialOrdering.order[r][oo];if(!this.GG.isVirtual(i)){if(!this.GG.isRelationship(i))throw"[1] Unexpected node "+i+" at rank "+r;parents=this.GG.getInEdges(i);if(this.ranks[parent[0]]!=this.ranks[parent[1]])throw"Assertion failed: edges betwen neighbouring ranks only";var order1=this.order.vOrder[parents[0]],order2=this.order.vOrder[parents[1]],minOrder=Math.min(order1,order2),maxOrder=Math.max(order1,order2);maxOrder==minOrder+1&&(this.moveVertexToRankAndOrder(i,this.ranks[parents[0]],maxOrder),handled[i]=!0)}}for(var oo=0;oo<initialOrdering.order[r].length;oo++){var i=initialOrdering.order[r][oo];if(!this.GG.isVirtual(i)){if(!this.GG.isRelationship(i))throw"[2] Unexpected node "+i+" at rank "+r;if(!handled.hasOwnProperty(i)){var parents=this.GG.getInEdges(i);this.order.vOrder[parents[0]]>this.order.vOrder[parents[1]]&&parents.reverse();var rank=this.ranks[parents[0]],order1=this.order.vOrder[parents[0]];if((order2=this.order.vOrder[parents[1]])==order1+1)throw"Assertion failed: all relationship with parents next to each other are already handled (for parents: "+Helpers.stringifyObject(parents)+")";var insertOrder=order1+1,rightOfParent0=this.order.order[rank][order1+1],leftOfParent1=this.order.order[rank][order2-1],p0busy=!1,p1busy=!1;if(this.GG.hasEdge(parents[0],rightOfParent0)&&(p0busy=!0),this.GG.hasEdge(parents[1],leftOfParent1)&&(p1busy=!0),p1busy&&p0busy){for(var o=order1+2;o<=order2-1;o++){var next=this.order.order[rank][o];if(!this.GG.hasEdge(parents[0],next)){insertOrder=o;break}}if(null==insertOrder){var parentsOfLeft=this.GG.getInEdges(leftOfParent1),otherP1=parentsOfLeft[0]!=parents[1]?parentsOfLeft[0]:parentsOfLeft[1];insertOrder=this.order.vOrder[otherP1]<order1?order2:order1+1}}else insertOrder=p1busy?order1+1:order2;this.moveVertexToRankAndOrder(i,rank,insertOrder);var oldOrder=initialOrdering.vOrder[i];if(oldOrder>0){var oldNeighbourLeft=initialOrdering.order[r][oldOrder-1];if(this.GG.isRelationship(oldNeighbourLeft)&&this.order.vOrder[oldNeighbourLeft]>this.order.vOrder[i]&&this.ranks[oldNeighbourLeft]==this.ranks[i]){this.swapChildrenIfAllAToTheLeftOfB(oldNeighbourLeft,i);var chHubL=this.GG.getOutEdges(oldNeighbourLeft)[0],chHubR=this.GG.getOutEdges(i)[0];this.order.vOrder[chHubL]<this.order.vOrder[chHubR]&&this.order.exchange(this.ranks[chHubL],this.order.vOrder[chHubL],this.order.vOrder[chHubR])}}if(oldOrder<initialOrdering.order[rank+1].length-1){var oldNeighbourRight=initialOrdering.order[r][oldOrder+1];if(this.GG.isRelationship(oldNeighbourRight)&&this.order.vOrder[oldNeighbourRight]<this.order.vOrder[i]&&this.ranks[oldNeighbourRight]==this.ranks[i]){this.swapChildrenIfAllAToTheLeftOfB(i,oldNeighbourRight);var chHubL=this.GG.getOutEdges(i)[0],chHubR=this.GG.getOutEdges(oldNeighbourRight)[0];this.order.vOrder[chHubL]<this.order.vOrder[chHubR]&&this.order.exchange(this.ranks[chHubL],this.order.vOrder[chHubL],this.order.vOrder[chHubR])}}}}}}this.removeRelationshipRanks(),this.improveOrdering();var edgeCrossings=this.edge_crossing(this.order,!1,!0);this.transposeLongEdges(this.order,edgeCrossings,!0),console.log("Final re-ordering: "+Helpers.stringifyObject(this.order.order)),console.log("Final ranks: "+Helpers.stringifyObject(this.ranks))}},moveVertexToRankAndOrder:function(v,newRank,newOrder){var oldRank=this.ranks[v],oldOrder=this.order.vOrder[v];this.order.moveVertexToRankAndOrder(oldRank,oldOrder,newRank,newOrder),this.ranks[v]=newRank},swapChildrenIfAllAToTheLeftOfB:function(leftRel,rightRel){console.log("Attempting to swap children of "+leftRel+" and "+rightRel+" (due to change of order during re-ranking)");var chHubL=this.GG.getOutEdges(leftRel)[0],chHubR=this.GG.getOutEdges(rightRel)[0],childrenL=this.GG.getOutEdges(chHubL),childrenR=this.GG.getOutEdges(chHubR),allChildren=childrenL.concat(childrenR),order=this.order,byOrder=function(a,b){return order.vOrder[a]-order.vOrder[b]};allChildren.sort(byOrder);var childRank=this.ranks[allChildren[0]],leftMostOrder=order.vOrder[allChildren[0]],rightMostOrder=order.vOrder[allChildren[allChildren.length-1]];if(rightMostOrder-leftMostOrder+1==childrenL.length+childrenR.length){for(i=0;i<allChildren.length;i++){var nextInOrder=allChildren[i],shouldBeLeftRelChild=i<childrenL.length;if(shouldBeLeftRelChild&&this.GG.getInEdges(nextInOrder)[0]!=chHubL)return;var outEdges=this.GG.getOutEdges(nextInOrder);if(outEdges.length>0)for(var j=0;j<outEdges.length;j++){var rel=outEdges[j];if(this.GG.isVirtual(rel))return;for(var parents=this.GG.getParents(rel),k=0;k<parents.length;k++){if(this.ranks[parents[k]]!=childRank)return;if(shouldBeLeftRelChild&&order.vOrder[parents[k]]<leftMostOrder)return;if(!shouldBeLeftRelChild&&order.vOrder[parents[k]]>rightMostOrder)return}}}for(var middle=Math.floor((leftMostOrder+rightMostOrder)/2),i=leftMostOrder;i<=middle;i++){var tmp=this.order.order[childRank][i];this.order.order[childRank][i]=this.order.order[childRank][leftMostOrder+rightMostOrder-i],this.order.order[childRank][leftMostOrder+rightMostOrder-i]=tmp,this.order.vOrder[this.order.order[childRank][i]]=i,this.order.vOrder[this.order.order[childRank][leftMostOrder+rightMostOrder-i]]=leftMostOrder+rightMostOrder-i}}},removeRelationshipRanks:function(){for(var r=2;r<=this.maxRank;r+=2){if(this.order.order[r].length>0)for(i=0;i<this.order.order[r].length;i++){v=this.order.order[r][i];this.GG.unplugVirtualVertex(v),this.ranks[v]=0,this.order.vOrder[v]=this.order.order[0].length,this.order.order[0].push(v)}this.order.order.splice(r,1);for(var v=0;v<this.ranks.length;v++)this.ranks[v]>r&&this.ranks[v]--;this.maxRank--}var unplugged=this.order.removeUnplugged().sort(function(a,b){return a-b});console.log("Removing unnecessary long edge pieces: "+Helpers.stringifyObject(unplugged));for(var i=0;i<unplugged.length;i++){var removedID=unplugged[i]-i;this.ranks.splice(removedID,1),this.GG.remove(removedID)}},improveOrdering:function(){for(r=1;r<=this.maxRank;r+=1)for(var oo=0;oo<this.order.order[r].length;oo++){var v=this.order.order[r][oo];if(this.GG.isPerson(v)&&0==this.GG.getInEdges(v).length){var relationships=this.GG.getOutEdges(v);if(1==relationships.length){var rel=relationships[0];if(this.ranks[rel]==r){var orderV=this.order.vOrder[v],orderRel=this.order.vOrder[rel];1!=Math.abs(orderRel-orderV)&&(orderRel>orderV?this.order.move(r,orderV,orderRel-orderV-1):this.order.move(r,orderV,orderRel-orderV+1))}}}}for(var r=2;r<=this.maxRank;r+=2)this.isChhubsOrderOK(r,this.order)||this.placeChhubsInCorrectOrder(r,this.order)},findConnectedComponent:function(v,edgeIncludedFunc,stopSet,maxSize){var component={},size=0,stopFound=!1;"[object Array]"!==Object.prototype.toString.call(v)&&(v=[v]);for(var q=new Queue,i=0;i<v.length;i++)q.push(v[i]),component[v[i]]=!0;for(;q.size()>0;){var nextV=q.pop(),allConnected=this.GG.getAllEdgesWithWeights(nextV);for(var u in allConnected)if(allConnected.hasOwnProperty(u)){if(edgeIncludedFunc(allConnected[u].out?nextV:u,allConnected[u].out?u:nextV)&&!component.hasOwnProperty(u)&&(component[u]=!0,q.push(u),size++,stopSet.hasOwnProperty(u))){stopFound=!0;break}if(size>maxSize){q.clear();break}}}return{component:component,size:size,stopSetReached:stopFound}},findAllAncestors:function(){for(var ancestors={},consangr={},r=1;r<=this.maxRank;r++)for(var nextRank=this.order.order[r],i=0;i<nextRank.length;i++){v=this.order.order[r][i];if(this.GG.isPerson(v)&&(ancestors[v]={},ancestors[v][v]=0,!this.GG.isAdoptedIn(v)))for(var parents=this.GG.getParents(v),j=0;j<parents.length;j++){familyBranch=ancestors[parents[j]];for(var u in familyBranch)familyBranch.hasOwnProperty(u)&&(ancestors[v].hasOwnProperty(u)?ancestors[v][u]=Math.min(familyBranch[u]+1,ancestors[v][u]):ancestors[v][u]=familyBranch[u]+1)}}for(r=1;r<=this.maxRank;r++)for(var nextRank=this.order.order[r],i=0;i<nextRank.length;i++){var v=this.order.order[r][i];if(this.GG.isRelationship(v)){ancestors[v]={},ancestors[v][v]=0;for(var parents=this.GG.getParents(v),j=0;j<parents.length;j++){var familyBranch=ancestors[parents[j]];for(var u in familyBranch)familyBranch.hasOwnProperty(u)&&(ancestors[v].hasOwnProperty(u)?(consangr[v]=!0,ancestors[v][u]=Math.min(familyBranch[u]+1,ancestors[v][u])):ancestors[v][u]=familyBranch[u]+1)}}}return{ancestors:ancestors,consangr:consangr}},positionVertically:function(){for(var verticalLevels=new VerticalLevels,r=1;r<=this.maxRank;r+=1)verticalLevels.rankVerticalLevels[r]=1;if(this.GG.v.length<=1)return verticalLevels;for(r=2;r<=this.maxRank;r+=2){for(var initLevels=[],edgeInfo=[],len=this.order.order[r].length,i=0;i<len;i++){v=this.order.order[r][i];if(!this.GG.isVirtual(v)){if(!this.GG.isChildhub(v))throw"Assertion failed: childhub nodes at every other rank ("+v+")";for(var realationship=this.GG.getInEdges(v)[0],top_x=this.positions[realationship],left_x=top_x,right_x=top_x,childCoords=[],outEdges=this.GG.getOutEdges(v),j=0;j<outEdges.length;j++){var child_x=this.positions[outEdges[j]];childCoords.push(child_x),left_x=Math.min(left_x,child_x),right_x=Math.max(right_x,child_x)}if(left_x==right_x)verticalLevels.childEdgeLevel[v]=0;else{var needTopmost=1==outEdges.length&&(0==this.order.vOrder[outEdges[0]]&&top_x>this.positions[outEdges[0]]||this.order.vOrder[outEdges[0]]==this.order.vOrder.length-1&&top_x<this.positions[outEdges[0]]);edgeInfo.push({childhub:v,top_x:top_x,left_x:left_x,right_x:right_x,childCoords:childCoords,needTopmost:needTopmost}),initLevels.push(1)}}}for(var pairScoreFunc=function(edge1,edge2,edge1level,edge2level){if(edgeInfo[edge1].right_x<edgeInfo[edge2].left_x||edgeInfo[edge1].left_x>edgeInfo[edge2].right_x)return 0;if(edge1level==edge2level)return 1/0;if(edge1level>edge2level){var tmpEdge=edge1,tmpLevel=edge1level;edge1=edge2,edge1level=edge2level,edge2=tmpEdge,edge2level=tmpLevel}var intersections=0;edgeInfo[edge2].top_x>=edgeInfo[edge1].left_x&&edgeInfo[edge2].top_x<=edgeInfo[edge1].right_x&&intersections++;for(var j=0;j<edgeInfo[edge1].childCoords.length;j++){var childX=edgeInfo[edge1].childCoords[j];childX>=edgeInfo[edge2].left_x&&childX<=edgeInfo[edge2].right_x&&intersections++}return edgeInfo[edge2].needTopmost?intersections+=.1:intersections},edgeLevels=(optimizer=new VerticalPosIntOptimizer(pairScoreFunc,initLevels)).computeVerticalPositions(5,600),v=0;v<edgeInfo.length;v++)verticalLevels.childEdgeLevel[edgeInfo[v].childhub]=edgeLevels[v],edgeLevels[v]>verticalLevels.rankVerticalLevels[r]&&(verticalLevels.rankVerticalLevels[r]=edgeLevels[v])}for(r=1;r<=this.maxRank;r++){for(var numLevels=1,initLevels=[],edgeInfo=[],relEdges={},len=this.order.order[r].length,i=0;i<len;i++){v=this.order.order[r][i];if(this.GG.isPerson(v)){if((outEdges=this.GG.getOutEdges(v)).length<=0)continue;var v_x=this.positions[v];verticalLevels.outEdgeVerticalLevel[v]={};var vOrder=this.order.vOrder,positionEdgesOnOneSide=function(edges){for(var nextAttachPort=0,nextVerticalLevel=0,k=0;k<edges.length;k++){for(var u=this.GG.downTheChainUntilNonVirtual(edges[k]),dest=edges[k],minOrder=Math.min(vOrder[dest],vOrder[v])+1,maxOrder=Math.max(vOrder[dest],vOrder[v]),minLevel=minOrder==maxOrder?0:1,otherVirtualEdge=!1,goesOver=[],o=minOrder;o<maxOrder;o++){var w=this.order.order[r][o];this.GG.isPlaceholder(w)||(this.GG.isRelationship(w)&&(minLevel=Math.max(minLevel,2)),this.GG.isPerson(w)&&(minLevel=Math.max(minLevel,3)),this.GG.isVirtual(w)&&this.GG.getInEdges(w)[0]!=v&&(otherVirtualEdge=!0),goesOver.push(w))}if(nextVerticalLevel=Math.max(nextVerticalLevel,minLevel),verticalLevels.outEdgeVerticalLevel[v][u]={attachlevel:nextAttachPort,verticalLevel:nextVerticalLevel,numAttachLevels:edges.length},minLevel>=2||1==minLevel&&otherVirtualEdge){var left_x=Math.min(v_x,this.positions[dest]),right_x=Math.max(v_x,this.positions[dest]),down_x=this.positions[dest],top_x=1/0;if(dest==u){var parents=this.GG.getInEdges(u),otherParent=parents[0]==v?parents[1]:parents[0];this.GG.isVirtual(otherParent)&&((top_x=this.positions[otherParent])>right_x&&(right_x=top_x),top_x<left_x&&(left_x=top_x))}edgeInfo.push({v:v,u:u,v_x:v_x,left_x:left_x,right_x:right_x,down_x:down_x,top_x:top_x,over:goesOver}),initLevels.push(nextVerticalLevel),relEdges.hasOwnProperty(u)||(relEdges[u]=[]),relEdges[u].push(edgeInfo.length-1)}nextAttachPort++,nextVerticalLevel++}return nextVerticalLevel-1}.bind(this),partnerInfo=this._findLeftAndRightPartners(v),maxLeftLevel=positionEdgesOnOneSide(partnerInfo.leftPartners),maxRightLevel=positionEdgesOnOneSide(partnerInfo.rightPartners);numLevels=Math.max(numLevels,Math.max(maxLeftLevel,maxRightLevel))}}if(edgeInfo.length>1){for(e=0;e<edgeInfo.length;e++)if(!edgeInfo[e].hasOwnProperty("edgeComplement")){var nextRel=edgeInfo[e].u,nextEdges=relEdges[nextRel];if(nextEdges.length>1){var otherEdge=nextEdges[0]==e?nextEdges[1]:nextEdges[0];edgeInfo[e].edgeComplement=otherEdge,edgeInfo[otherEdge].edgeComplement=e}}var pairScoreFunc=function(edge1,edge2,edge1level,edge2level,levels){if(edgeInfo[edge1].right_x<=edgeInfo[edge2].left_x||edgeInfo[edge1].left_x>=edgeInfo[edge2].right_x)return 0;if(edge1level==edge2level)return 1/0;if(edge2level>edge1level){var tmpEdge=edge1,tmpLevel=edge1level;edge1=edge2,edge1level=edge2level,edge2=tmpEdge,edge2level=tmpLevel}if(edgeInfo[edge1].v==edgeInfo[edge2].v&&edgeInfo[edge1].direction==edgeInfo[edge2].direction&&edgeInfo[edge1].attachLevel<edgeInfo[edge2].attachLevel)return 1/0;if(edgeInfo[edge1].left_x<=edgeInfo[edge2].left_x&&edgeInfo[edge1].right_x>=edgeInfo[edge2].right_x)return 0;if(edgeInfo[edge1].left_x>=edgeInfo[edge2].left_x&&edgeInfo[edge1].right_x<=edgeInfo[edge2].right_x)return 2;var extraIntersections=1;return edgeInfo[edge2].top_x>=edgeInfo[edge1].left_x&&edgeInfo[edge2].top_x<=edgeInfo[edge1].right_x&&extraIntersections++,edgeInfo[edge1].hasOwnProperty("edgeComplement")&&(!levels||levels[edgeInfo[edge1].edgeComplement]>edge2level)&&edgeInfo[edge1].down_x>=edgeInfo[edge2].left_x&&edgeInfo[edge1].down_x<=edgeInfo[edge2].right_x&&(extraIntersections-=.4),extraIntersections},optimizer=new VerticalPosIntOptimizer(pairScoreFunc,initLevels,initLevels),relEdgeLevels=optimizer.computeVerticalPositions(5,500);numLevels=0;for(i=0;i<edgeInfo.length;i++)verticalLevels.outEdgeVerticalLevel[edgeInfo[i].v][edgeInfo[i].u].verticalLevel=relEdgeLevels[i],relEdgeLevels[i]>numLevels&&(numLevels=relEdgeLevels[i]);for(i=0;i<edgeInfo.length;i++){var level=relEdgeLevels[i];if(level>1){for(var lowerLevel=!0,e=0;e<edgeInfo[i].over.length;e++){var w=edgeInfo[i].over[e];if(!this.GG.isRelationship(w)){lowerLevel=!1;break}var parents=this.GG.getParents(w);if(verticalLevels.outEdgeVerticalLevel[parents[0]][w].verticalLevel<=level||verticalLevels.outEdgeVerticalLevel[parents[1]][w].verticalLevel<=level){lowerLevel=!1;break}}lowerLevel&&(verticalLevels.outEdgeVerticalLevel[edgeInfo[i].v][edgeInfo[i].u].verticalLevel=1)}}}verticalLevels.rankVerticalLevels[r-1]+=Math.max(0,numLevels-2)}return verticalLevels},_findLeftAndRightPartners:function(v,useOrdering){for(var ordering=useOrdering?useOrdering.vOrder:this.order.vOrder,rank=this.ranks[v],orderV=ordering[v],outEdges=this.GG.getOutEdges(v),leftEdges=[],rightEdges=[],j=0;j<outEdges.length;j++){var rel=outEdges[j];this.ranks[rel]==rank&&(ordering[rel]<orderV?leftEdges.push(rel):rightEdges.push(rel))}var byDistToV=function(a,b){return Math.abs(ordering[a]-orderV)-Math.abs(ordering[b]-orderV)};return leftEdges.sort(byDistToV),rightEdges.sort(byDistToV),{leftPartners:leftEdges,rightPartners:rightEdges}},findBestTwinInsertPosition:function(v,insertedTwinRelationships,useOrdering){var allTwins=this.GG.getAllTwinsOf(v),rank=this.ranks[v],rankOrder=useOrdering?useOrdering.order[rank]:this.order.order[rank],vOrder=useOrdering?useOrdering.vOrder:this.order.vOrder,byOrder=function(a,b){return vOrder[a]-vOrder[b]};allTwins.sort(byOrder);for(var numEdgesAcross=[],i=0;i<=allTwins.length;i++)numEdgesAcross[i]=0;for(var leftMostTwinOrder=vOrder[allTwins[0]],i=0;i<insertedTwinRelationships.length;i++){var rel=insertedTwinRelationships[i];if(vOrder[rel]<leftMostTwinOrder)for(j=1;j<=allTwins.length;j++)numEdgesAcross[j]+=j;else for(j=0;j<allTwins.length;j++)numEdgesAcross[j]+=allTwins.length-j}for(i=0;i<allTwins.length;i++){for(var partnerInfo=this._findLeftAndRightPartners(allTwins[i],useOrdering),numLeftOf=partnerInfo.leftPartners.length,numRightOf=partnerInfo.rightPartners.length,j=0;j<=i;j++)numEdgesAcross[j]+=numLeftOf;for(j=i+1;j<=allTwins.length;j++)numEdgesAcross[j]+=numRightOf}for(var orderOfLeftMostTwin=vOrder[allTwins[0]],order=orderOfLeftMostTwin+Helpers.indexOfLastMinElementInArray(numEdgesAcross),i=orderOfLeftMostTwin+1;i<order;i++){var nodeID=rankOrder[i];this.GG.isRelationship(nodeID)&&order++}return order},computeRankY:function(oldRanks,oldRankY){for(var rankY=[0,0],r=2;r<=this.maxRank;r++){var yDistance=this.isChildhubRank(r)?this._computePersonRankHeight(r-1):this.yDistanceChildhubToNode;rankY[r]=rankY[r-1]+yDistance+this.yExtraPerHorizontalLine*(Math.max(this.vertLevel.rankVerticalLevels[r-1],1)-1)}if(oldRanks&&oldRankY)for(var oldRank=oldRanks[0],newRank=this.ranks[0],oldY=oldRankY[oldRank],shiftAmount=rankY[newRank]-oldY,r=0;r<=this.maxRank;r++)rankY[r]-=shiftAmount;return rankY},isChildhubRank:function(r){for(var i=0;i<this.order.order[r].length;i++){if(this.GG.isPerson(this.order.order[r][i])||this.GG.isRelationship(this.order.order[r][i]))return!1;if(this.GG.isChildhub(this.order.order[r][i]))return!0}return!0},_computePersonRankHeight:function(r){for(var height=this.yDistanceNodeToChildhub,maxNumLinesInComments=0,i=0;i<this.order.order[r].length;i++)if(this.GG.isPerson(this.order.order[r][i])){var person=this.order.order[r][i],numLabelLines=0,personProperties=this.GG.properties[person];personProperties.hasOwnProperty("comments")&&(numLabelLines+=(personProperties.comments.replace(/^\s+|\s+$/g,"").match(/\n/g)||[]).length+1);var dob=personProperties.hasOwnProperty("dob")?new PedigreeDate(personProperties.dob):null,dod=personProperties.hasOwnProperty("dod")?new PedigreeDate(personProperties.dod):null;if(null!==dob&&dob.isComplete()&&numLabelLines++,null!==dod&&dod.isComplete()&&numLabelLines++,null!==dob&&dob.isComplete()&&null!==dod&&dod.isComplete()){var age=AgeCalc.getAge(dob,dod);(age.length<2||age.indexOf(" y")<0)&&numLabelLines--}if((personProperties.hasOwnProperty("lName")||personProperties.hasOwnProperty("fName"))&&numLabelLines++,personProperties.hasOwnProperty("externalID")&&numLabelLines++,editor&&editor.getPreferencesManager().getConfigurationOption("displayCancerLabels")&&personProperties.hasOwnProperty("cancers"))for(var cancer in personProperties.cancers)personProperties.cancers.hasOwnProperty(cancer)&&personProperties.cancers[cancer].hasOwnProperty("affected")&&personProperties.cancers[cancer].affected&&numLabelLines++;numLabelLines>maxNumLinesInComments&&(maxNumLinesInComments=numLabelLines)}return maxNumLinesInComments>4&&(height+=(maxNumLinesInComments-4)*this.yCommentLineHeight),height},computeNodeY:function(rank,level){return this.rankY[rank]+(level-1)*this.yExtraPerHorizontalLine},computeRelLineY:function(rank,attachLevel,verticalLevel){var attachY=this.rankY[rank]-attachLevel*this.yAttachPortHeight,relLineY=this.rankY[rank];return relLineY-=1==verticalLevel?attachLevel*this.yAttachPortHeight:2==verticalLevel?1.25*this.yExtraPerHorizontalLine:verticalLevel*this.yExtraPerHorizontalLine,{attachY:attachY,relLineY:relLineY}},displayGraph:function(xcoord,message){if(TIME_DRAWING_DEBUG=0,DISPLAY_POSITIONING_DEBUG){var debugTimer=new Helpers.Timer,renderPackage={convertedG:this.GG,ranks:this.ranks,ordering:this.order,positions:xcoord,consangr:this.consangr};debug_display_processed_graph(renderPackage,"output",!0,message),TIME_DRAWING_DEBUG=debugTimer.report()}},position:function(){var longEdges=this.find_long_edges(),xcoord=new XCoord(null,this);this.try_shift_right(xcoord,!0,!1),this.try_shift_right(xcoord,!1,!0),xcoord.normalize(),Helpers.printObject(xcoord.xcoord);for(var xbest=xcoord.copy(),bestScore=this.xcoord_score(xbest),i=0;i<=this.maxXcoordIterations;i++){this.try_shift_right(xcoord,!0,!0),this.try_straighten_long_edges(longEdges,xcoord),xcoord.normalize();var score=this.xcoord_score(xcoord);if(!score.isBettertThan(bestScore))break;xbest=xcoord.copy(),bestScore=score}return Helpers.printObject(xbest.xcoord),xbest.xcoord},xcoord_score:function(xcoord,considerOnlyRank,considerEdgesFromAbove,considerEdgesToBelow,fromOrderOnRank){var score=new XCoordScore(this.GG.getMaxRealVertexId()),rankFrom=1,rankTo=this.maxRank;void 0!==considerOnlyRank&&(rankTo=considerOnlyRank,0==(rankFrom=considerOnlyRank-1)&&(rankFrom=1),considerEdgesFromAbove||(rankFrom=considerOnlyRank));for(var r=rankFrom;r<=rankTo;r++){var len=this.order.order[r].length,fromOrder=0;void 0!==considerOnlyRank&&r==considerOnlyRank&&(fromOrder=fromOrderOnRank);for(var i=fromOrder;i<len;++i)for(var v=this.order.order[r][i],outEdges=this.GG.getOutEdges(v),lenO=outEdges.length,j=0;j<lenO;++j){var u=outEdges[j];if(void 0!==considerOnlyRank){if(!considerEdgesToBelow&&this.ranks[u]!=considerOnlyRank)continue;if(this.ranks[u]==considerOnlyRank&&this.order.vOrder[u]<fromOrderOnRank)continue}var coeff=this.edge_importance_to_straighten(v,u),w=this.xCoordEdgeWeightValue?this.GG.weights[v][u]:1,dist=Math.abs(xcoord.xcoord[v]-xcoord.xcoord[u]),thisScore=coeff*w*dist;score.add(thisScore),score.addEdge(v,u,dist)}}return score},edge_importance_to_straighten:function(fromV,toV){return this.GG.isRelationship(toV)?1:!this.GG.isVirtual(fromV)&&this.GG.isVirtual(toV)?1.5:this.GG.isRelationship(fromV)?8:this.GG.isVirtual(fromV)?this.GG.isVirtual(toV)?16:4:2},try_shift_right:function(xcoord,scoreQualityOfNodesBelow,scoreQualityOfNodesAbove){for(var rr=0;rr<=this.maxRank;rr++){var r;if(0!=(r=scoreQualityOfNodesAbove?rr:this.maxRank-rr))for(var considerEdgesToBelow=(scoreQualityOfNodesBelow||1==r)&&r!=this.maxRank,considerEdgesFromAbove=(scoreQualityOfNodesAbove||r==this.maxRank)&&1!=r,i=this.order.order[r].length-1;i>=0;i--){var v=this.order.order[r][i],median=this.compute_median(v,xcoord,considerEdgesFromAbove,considerEdgesToBelow);median!=median&&(median=xcoord.xcoord[v]);var maxShift=median-xcoord.xcoord[v],noDisturbMax=xcoord.getRightMostNoDisturbPosition(v),maxSafeShift=noDisturbMax<median?noDisturbMax-xcoord.xcoord[v]:maxShift;if(!(maxShift<=0)){var bestShift=0,bestScore=this.xcoord_score(xcoord,r,considerEdgesFromAbove,considerEdgesToBelow,i),shiftAmount=maxShift;do{var newScore;if(shiftAmount<=maxSafeShift)xcoord.xcoord[v]+=shiftAmount,newScore=this.xcoord_score(xcoord,r,considerEdgesFromAbove,considerEdgesToBelow,i),xcoord.xcoord[v]-=shiftAmount;else{var newCoord=xcoord.copy();newCoord.shiftRightAndShiftOtherIfNecessary(v,shiftAmount),newScore=this.xcoord_score(newCoord,r,considerEdgesFromAbove,considerEdgesToBelow,i)}newScore.isBettertThan(bestScore)&&(bestShift=shiftAmount,bestScore=newScore),shiftAmount-=1}while(shiftAmount>=Math.max(0,maxSafeShift));bestShift>0&&xcoord.shiftRightAndShiftOtherIfNecessary(v,bestShift)}}}},compute_median:function(v,xcoord,considerAbove,considerBelow){var positionsAbove=[],positionsBelow=[],allEdgesWithWeights=this.GG.getAllEdgesWithWeights(v);for(var u in allEdgesWithWeights)if(allEdgesWithWeights.hasOwnProperty(u)){if(u==v)continue;for(var weight=allEdgesWithWeights[u].weight,score=(allEdgesWithWeights[u].out?this.edge_importance_to_straighten(v,u):this.edge_importance_to_straighten(u,v))*(this.xCoordEdgeWeightValue?weight:1),i=0;i<score;i++)this.ranks[u]<=this.ranks[v]&&positionsAbove.push(xcoord.xcoord[u]),this.ranks[u]>=this.ranks[v]&&positionsBelow.push(xcoord.xcoord[u])}var numericSortFunc=function(a,b){return a-b},median=void 0,medianAbove=void 0,medianBelow=void 0;if((considerAbove||this.GG.isVirtual(v))&&positionsAbove.length>0&&(positionsAbove.sort(numericSortFunc),(middle=Math.ceil(positionsAbove.length/2))>=positionsAbove.length&&(middle=positionsAbove.length-1),medianAbove=positionsAbove.length%2==0?Math.floor((positionsAbove[middle]+positionsAbove[middle-1])/2):positionsAbove[middle]),(considerBelow||this.GG.isVirtual(v))&&positionsBelow.length>0){positionsBelow.sort(numericSortFunc);var middle=Math.ceil(positionsBelow.length/2);middle>=positionsBelow.length&&(middle=positionsBelow.length-1),medianBelow=positionsBelow.length%2==0?Math.floor((positionsBelow[middle]+positionsBelow[middle-1])/2):positionsBelow[middle]}return median=void 0!==medianAbove&&void 0!==medianBelow?Math.max(medianAbove,medianBelow):void 0!==medianAbove?medianAbove:medianBelow,Math.ceil(median)},try_straighten_long_edges:function(longEdges,xcoord){for(var improved=!1,e=0;e<longEdges.length;++e){for(var chain=longEdges[e],currentCenter=xcoord.xcoord[chain[0]],corridorLeft=xcoord.getLeftMostNoDisturbPosition(chain[0]),corridorRight=xcoord.getRightMostNoDisturbPosition(chain[0]),i=1;i<chain.length;++i){nextV=chain[i];if((nextCenter=xcoord.xcoord[nextV])!=currentCenter){if(!(nextCenter>=corridorLeft&&nextCenter<=corridorRight))break;for(j=0;j<i;++j)xcoord.xcoord[chain[j]]=nextCenter;improved=!0,currentCenter=nextCenter}if(corridorLeft=Math.max(corridorLeft,xcoord.getLeftMostNoDisturbPosition(nextV)),(corridorRight=Math.min(corridorRight,xcoord.getRightMostNoDisturbPosition(nextV)))<corridorLeft)break}for(var lastNode=chain.length-1,currentCenter=xcoord.xcoord[chain[lastNode]],corridorLeft=xcoord.getLeftMostNoDisturbPosition(chain[lastNode]),corridorRight=xcoord.getRightMostNoDisturbPosition(chain[lastNode]),i=lastNode-1;i>=0;--i){var nextV=chain[i],nextCenter=xcoord.xcoord[nextV];if(nextCenter!=currentCenter){if(!(nextCenter>=corridorLeft&&nextCenter<=corridorRight))break;for(var j=lastNode;j>i;j--)xcoord.xcoord[chain[j]]=nextCenter;improved=!0,currentCenter=nextCenter}if(corridorLeft=Math.max(corridorLeft,xcoord.getLeftMostNoDisturbPosition(nextV)),(corridorRight=Math.min(corridorRight,xcoord.getRightMostNoDisturbPosition(nextV)))<corridorLeft)break}}return improved},find_long_edges:function(){for(var longEdges=[],maxRealId=this.GG.getMaxRealVertexId(),numVert=this.GG.getNumVertices(),checked=[],v=maxRealId+1;v<numVert;v++)checked[v]=!1;for(v=maxRealId+1;v<numVert;v++)if(!checked[v]&&0!=this.ranks[v]){for(var head=v;this.GG.isVirtual(this.GG.getInEdges(head)[0]);)head=this.GG.getInEdges(head)[0];var chain=[],next=head;do{checked[next]=!0,chain.push(next),next=this.GG.getOutEdges(next)[0]}while(this.GG.isVirtual(next));console.log("Found long edge "+Helpers.stringifyObject(chain)),longEdges.push(chain)}return longEdges}};var DISPLAY_POSITIONING_DEBUG=!1,TIME_DRAWING_DEBUG=0;